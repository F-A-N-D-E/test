{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\Resolution.jsx\";\nimport React from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Resolution({\n  data,\n  num\n}) {\n  function render() {\n    if (data.type === 'radio') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: data.answer.map((elem, index) => {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: num + '_answer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 47\n            }, this), elem]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false);\n    } else if (data.type === 'checkbox') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: data.answer.map((elem, index) => {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            className: ResolCSS.label,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: num + '_answer_' + index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 74\n            }, this), elem]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false);\n    } else if (data.type === 'text') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: num + '_answer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n  // let x = render()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ResolCSS.res,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: ResolCSS.resP,\n      children: [num, \". \", data.textQUE]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), render()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n_c = Resolution;\nvar _c;\n$RefreshReg$(_c, \"Resolution\");","map":{"version":3,"names":["React","ResolCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","Resolution","data","num","render","type","children","answer","map","elem","index","name","fileName","_jsxFileName","lineNumber","columnNumber","className","label","res","resP","textQUE","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/Resolution.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nexport default function Resolution({ data, num }) {\r\n\r\n    function render() {\r\n        if (data.type === 'radio') {\r\n            return <>\r\n                {data.answer.map((elem, index) => {\r\n\r\n                    return <label key={index}><input type=\"radio\" name={num + '_answer'} />{elem}</label>\r\n\r\n                })}\r\n            </>\r\n        } else if (data.type === 'checkbox') {\r\n            return <>\r\n                {data.answer.map((elem, index) => {\r\n\r\n                    return <label className={ResolCSS.label} key={index}><input type=\"checkbox\" name={num + '_answer_' + index} />{elem}</label>\r\n\r\n                })}\r\n            </>\r\n        } else if (data.type === 'text') {\r\n            return <>\r\n                <input type=\"text\" name={num + '_answer'} />\r\n            </>\r\n        }\r\n    }\r\n\r\n    // let x = render()\r\n\r\n    return <div className={ResolCSS.res}>\r\n        <p className={ResolCSS.resP}>{num}. {data.textQUE}</p>\r\n\r\n        {render()}\r\n\r\n    </div>\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,eAAe,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAI,CAAC,EAAE;EAE9C,SAASC,MAAMA,CAAA,EAAG;IACd,IAAIF,IAAI,CAACG,IAAI,KAAK,OAAO,EAAE;MACvB,oBAAOP,OAAA,CAAAE,SAAA;QAAAM,QAAA,EACFJ,IAAI,CAACK,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAE9B,oBAAOZ,OAAA;YAAAQ,QAAA,gBAAmBR,OAAA;cAAOO,IAAI,EAAC,OAAO;cAACM,IAAI,EAAER,GAAG,GAAG;YAAU;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAACN,IAAI;UAAA,GAAzDC,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA4D,CAAC;QAEzF,CAAC;MAAC,gBACJ,CAAC;IACP,CAAC,MAAM,IAAIb,IAAI,CAACG,IAAI,KAAK,UAAU,EAAE;MACjC,oBAAOP,OAAA,CAAAE,SAAA;QAAAM,QAAA,EACFJ,IAAI,CAACK,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAE9B,oBAAOZ,OAAA;YAAOkB,SAAS,EAAEpB,QAAQ,CAACqB,KAAM;YAAAX,QAAA,gBAAaR,OAAA;cAAOO,IAAI,EAAC,UAAU;cAACM,IAAI,EAAER,GAAG,GAAG,UAAU,GAAGO;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAACN,IAAI;UAAA,GAArEC,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwE,CAAC;QAEhI,CAAC;MAAC,gBACJ,CAAC;IACP,CAAC,MAAM,IAAIb,IAAI,CAACG,IAAI,KAAK,MAAM,EAAE;MAC7B,oBAAOP,OAAA,CAAAE,SAAA;QAAAM,QAAA,eACHR,OAAA;UAAOO,IAAI,EAAC,MAAM;UAACM,IAAI,EAAER,GAAG,GAAG;QAAU;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,gBAC9C,CAAC;IACP;EACJ;;EAEA;;EAEA,oBAAOjB,OAAA;IAAKkB,SAAS,EAAEpB,QAAQ,CAACsB,GAAI;IAAAZ,QAAA,gBAChCR,OAAA;MAAGkB,SAAS,EAAEpB,QAAQ,CAACuB,IAAK;MAAAb,QAAA,GAAEH,GAAG,EAAC,IAAE,EAACD,IAAI,CAACkB,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAErDX,MAAM,CAAC,CAAC;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AACV;AAACM,EAAA,GAlCuBpB,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
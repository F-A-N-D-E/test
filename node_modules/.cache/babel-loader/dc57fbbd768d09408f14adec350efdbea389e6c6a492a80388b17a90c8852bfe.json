{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\ResolutionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport Resolution from \"./Resolution\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResolutionForm() {\n  _s();\n  let [data, setData] = useState([]);\n  const getTest = async () => {\n    let paramId = window.location.pathname.split('/')[2];\n    let dataProcess = [];\n    let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data);\n    let tempKey = 0;\n    let tempObj = {};\n    for (let key in dataFromServer) {\n      if ((+key[0] || +key[0] === 0) && +key[0] === tempKey) {\n        tempObj = {\n          ...tempObj,\n          [key]: dataFromServer[key]\n        };\n        console.log(tempObj, 'temp');\n        /* dataProcess[tempKey] = {\r\n            ...dataProcess[tempKey],\r\n            [key.slice(2)]: dataFromServer[key]\r\n        } */\n      } else if (key.split('_')[2] !== 'nameTest' && key !== 'id' && tempKey !== +key[0]) {\n        dataProcess.push(tempObj);\n        tempObj = {};\n        tempKey += 1;\n      } else if (key.split('_')[2] === 'nameTest') {\n        dataProcess.push(dataFromServer[key]);\n      }\n    }\n    setData(dataProcess);\n  }; // переделать эту операцию на сервер\n\n  useEffect(() => {\n    getTest();\n  }, []);\n  console.log(data);\n\n  /*\r\n  0: {\r\n  textQUE: 'Когда началась ВОВ', \r\n  type: 'radio', \r\n  answerTrue_0: '1939', \r\n  answerFalse_0: '1941'\r\n  }\r\n  info: {\r\n  id: 'ewq', \r\n  nameTest: 'Время начала Второй мировой войны'\r\n  } \r\n  */\n\n  /* function renderItem(data = {}) {\r\n      for (let key in data){\r\n        }\r\n  } */\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ResolCSS.btnAdd,\n        type: \"submit\",\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n}\n_s(ResolutionForm, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ResolutionForm;\nvar _c;\n$RefreshReg$(_c, \"ResolutionForm\");","map":{"version":3,"names":["React","useEffect","useState","ResolCSS","Resolution","jsxDEV","_jsxDEV","Fragment","_Fragment","ResolutionForm","_s","data","setData","getTest","paramId","window","location","pathname","split","dataProcess","dataFromServer","fetch","then","res","json","r","tempKey","tempObj","key","console","log","push","method","children","className","btnAdd","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/ResolutionForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nimport Resolution from \"./Resolution\";\r\n\r\nexport default function ResolutionForm() {\r\n    let [data, setData] = useState([])\r\n\r\n    const getTest = async () => {\r\n        let paramId = window.location.pathname.split('/')[2]\r\n        let dataProcess = []\r\n        let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data)\r\n\r\n        let tempKey = 0\r\n        let tempObj = {}\r\n        for (let key in dataFromServer) {\r\n            if ((+key[0] || +key[0] === 0) && +key[0] === tempKey) {\r\n                tempObj = {\r\n                    ...tempObj,\r\n                    [key]: dataFromServer[key]\r\n                }\r\n                console.log(tempObj, 'temp')\r\n                /* dataProcess[tempKey] = {\r\n                    ...dataProcess[tempKey],\r\n                    [key.slice(2)]: dataFromServer[key]\r\n                } */\r\n\r\n\r\n            } else if (key.split('_')[2] !== 'nameTest' && key !== 'id' && tempKey !== +key[0]) {\r\n                dataProcess.push(tempObj)\r\n                tempObj = {}\r\n                tempKey += 1\r\n            } else if (key.split('_')[2] === 'nameTest') {\r\n                dataProcess.push(dataFromServer[key])\r\n            }\r\n        }\r\n        setData(dataProcess)\r\n    } // переделать эту операцию на сервер\r\n\r\n    useEffect(() => {\r\n        getTest()\r\n    }, [])\r\n    console.log(data)\r\n\r\n    /*\r\n    0: {\r\n    textQUE: 'Когда началась ВОВ', \r\n    type: 'radio', \r\n    answerTrue_0: '1939', \r\n    answerFalse_0: '1941'\r\n    }\r\n    info: {\r\n    id: 'ewq', \r\n    nameTest: 'Время начала Второй мировой войны'\r\n    } \r\n    */\r\n\r\n    /* function renderItem(data = {}) {\r\n        for (let key in data){\r\n\r\n        }\r\n    } */\r\n\r\n    return <form method=\"post\">\r\n        {data ? <>\r\n            {/* <h3>{}</h3> */}\r\n\r\n\r\n\r\n            <button className={ResolCSS.btnAdd} type=\"submit\">Завершить</button>\r\n        </>\r\n            : <div>Загрузка</div>}\r\n    </form>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
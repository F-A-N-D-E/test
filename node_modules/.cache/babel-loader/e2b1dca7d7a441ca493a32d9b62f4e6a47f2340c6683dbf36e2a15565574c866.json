{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\Form\\\\QUEForm.jsx\";\nimport React, { useState } from \"react\";\nimport FormCSS from '../styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QUEForm({\n  elemFromState,\n  number,\n  remove,\n  last,\n  add,\n  mainList,\n  mainSetList\n}) {\n  /* \r\n      key={index}\r\n      id={elem}\r\n      number={index}\r\n      remove={remove}\r\n      last={index === list.length - 1 ? true : false}\r\n      add={add}\r\n        const [list, setList] = useState({\r\n      id: qwe,\r\n      type: 'type',\r\n      text: 'qwe',\r\n      answerTrue: [],\r\n      answerFalse: []\r\n      }) \r\n  */\n\n  let num = number + '_';\n\n  // const [stateType, setStateType] = useState('radio') // стейт для смены типа ответа\n\n  // const [listTrueAnswer, setListTrueAnswer] = useState([]) // стейт верных ответов\n  // const [stateTrueId, setStateTrueId] = useState(2) // счетчик айдишников для стейта верных ответов\n\n  // const [listFalseAnswer, setListFalseAnswer] = useState([]) // стейт неверных ответов\n  // const [stateFalseId, setStateFalseId] = useState(2) // счетчик айдишников для стейта неверных ответов\n  /* \r\n      {\r\n      id,\r\n      name,\r\n      text\r\n  }*/ // структура записей в стейтах ответа\n\n  function setAnswers() {\n    // отоброжение по типу ответа\n    if (elemFromState.type === 'radio') {\n      // radio btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), mapList('answerTrue'), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    } else if (elemFromState.type === 'text') {\n      // text btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: FormCSS.pInTextType,\n            children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0433\\u043E \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), mapList('answerTrue')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), lastBtn('answerTrue')]\n      }, void 0, true);\n    } else if (elemFromState.type === 'checkbox') {\n      // checkbox\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), mapList('answerTrue'), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.margin_bottom,\n            onClick: () => btnAddAns('answerTrue'),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    }\n  } // /отоброжение по типу ответа\n\n  function lastBtn(bool) {\n    // сокращенка для стиля последней кнопки 'завершить', \"добавить вопрос\"\n    if (last) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            onClick: () => add(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: number === 0 ? 'reset' : 'button',\n            className: FormCSS.removeAnsBtn,\n            onClick: number !== 0 ? () => remove(elemFromState.id) : undefined,\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: number === 0 ? 'reset' : 'button',\n          className: FormCSS.removeAnsBtn,\n          onClick: number !== 0 ? () => remove(elemFromState.id) : undefined,\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 20\n      }, this);\n    }\n  } // /сокращенка для стиля последней кнопки\n\n  function btnAddAns(bool) {\n    // кнопка добавления ответа\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    if (bool === 'answerTrue') {\n      elemFromState.answerTrue = [...elemFromState.answerTrue, ''];\n    } else {\n      elemFromState.answerFalse = [...elemFromState.answerFalse, ''];\n    }\n    copy[indexMainStait] = elemFromState;\n    mainSetList(copy);\n    console.log(copy);\n  } // /кнопка добавления ответа\n\n  function setTextAnsw(e, bool) {\n    // реактивная замена ответа в стейте\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    copy[indexMainStait][bool] = e.target.value;\n    mainSetList(copy);\n  } // /реактивная замена ответа в стейте\n\n  function btnRemoveAns(text, bool) {\n    // кнопка удаления ответа из стейта\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    let indexAnswerFromMainStait = copy[indexMainStait][bool].findIndex(elem => elem === text);\n    copy[indexMainStait][bool][indexAnswerFromMainStait] = text;\n    mainSetList(copy);\n  } // /кнопка удаления ответа из стейта\n\n  function mapList(bool) {\n    // сокращенка для вывода списка ответа\n\n    let res = elemFromState[bool].map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: num + bool,\n          value: elem,\n          onChange: e => setTextAnsw(e, bool),\n          className: FormCSS.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + bool,\n            value: elem,\n            onChange: e => setTextAnsw(e, bool),\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.removeAnsBtn,\n            onClick: () => btnRemoveAns(elem.id, bool),\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 20\n      }, this);\n    });\n    return res;\n  } // /сокращенка для вывода списка ответа\n\n  function switchTypeAnswer(type) {\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    copy[indexMainStait].type = type;\n    copy[indexMainStait].answerTrue = [''];\n    copy[indexMainStait].answerFalse = [''];\n    mainSetList(copy);\n  }\n  function ChangeTextQue(e) {\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    copy[indexMainStait].text = e.target.value;\n    mainSetList(copy);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: FormCSS.blockQUE,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: FormCSS.textarea,\n      name: num + \"textQUE\",\n      value: elemFromState.text,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\",\n      onChange: e => ChangeTextQue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: FormCSS.type,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: FormCSS.type_para,\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"radio\",\n          onClick: () => switchTypeAnswer('radio'),\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 20\n        }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"text\",\n          onClick: () => switchTypeAnswer('text')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 20\n        }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"checkbox\",\n          onClick: () => switchTypeAnswer('checkbox')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 20\n        }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), setAnswers()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 13\n  }, this);\n}\n_c = QUEForm;\nvar _c;\n$RefreshReg$(_c, \"QUEForm\");","map":{"version":3,"names":["React","useState","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","QUEForm","elemFromState","number","remove","last","add","mainList","mainSetList","num","setAnswers","type","children","className","answer_block","fileName","_jsxFileName","lineNumber","columnNumber","mapList","lastBtn","pInTextType","btnAdd","margin_bottom","onClick","btnAddAns","bool","lastBlock","removeAnsBtn","id","undefined","copy","indexMainStait","findIndex","elem","answerTrue","answerFalse","console","log","setTextAnsw","e","target","value","btnRemoveAns","text","indexAnswerFromMainStait","res","map","index","name","onChange","answer","switchTypeAnswer","ChangeTextQue","blockQUE","textarea","placeholder","type_para","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/Form/QUEForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormCSS from '../styles/Form.module.css'\r\n\r\nexport default function QUEForm({ elemFromState, number, remove, last, add, mainList, mainSetList }) {\r\n    /* \r\n        key={index}\r\n        id={elem}\r\n        number={index}\r\n        remove={remove}\r\n        last={index === list.length - 1 ? true : false}\r\n        add={add}\r\n\r\n        const [list, setList] = useState({\r\n        id: qwe,\r\n        type: 'type',\r\n        text: 'qwe',\r\n        answerTrue: [],\r\n        answerFalse: []\r\n        }) \r\n    */\r\n\r\n\r\n\r\n\r\n    let num = number + '_'\r\n\r\n    // const [stateType, setStateType] = useState('radio') // стейт для смены типа ответа\r\n\r\n    // const [listTrueAnswer, setListTrueAnswer] = useState([]) // стейт верных ответов\r\n    // const [stateTrueId, setStateTrueId] = useState(2) // счетчик айдишников для стейта верных ответов\r\n\r\n    // const [listFalseAnswer, setListFalseAnswer] = useState([]) // стейт неверных ответов\r\n    // const [stateFalseId, setStateFalseId] = useState(2) // счетчик айдишников для стейта неверных ответов\r\n    /* \r\n        {\r\n        id,\r\n        name,\r\n        text\r\n    }*/ // структура записей в стейтах ответа\r\n\r\n    function setAnswers() { // отоброжение по типу ответа\r\n        if (elemFromState.type === 'radio') { // radio btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    {mapList('answerTrue')}\r\n\r\n                    <p>Неверный: </p>\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n\r\n\r\n        } else if (elemFromState.type === 'text') { // text btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p className={FormCSS.pInTextType}>Вариант возможного написания правильного ответа: </p>\r\n\r\n                    {mapList('answerTrue')}\r\n                </div>\r\n\r\n                {lastBtn('answerTrue')}\r\n            </>)\r\n\r\n\r\n        } else if (elemFromState.type === 'checkbox') { // checkbox\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    {mapList('answerTrue')}\r\n\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.margin_bottom} onClick={() => btnAddAns('answerTrue')}>Добавить</button>\r\n\r\n                    <p>Неверный ответ: </p>\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n        }\r\n    } // /отоброжение по типу ответа\r\n\r\n    function lastBtn(bool) { // сокращенка для стиля последней кнопки 'завершить', \"добавить вопрос\"\r\n        if (last) {\r\n            return <div className={FormCSS.lastBlock}>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n\r\n                <div>\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => add()}>Добавить вопрос</button>\r\n\r\n                    <button type={number === 0 ? 'reset' : 'button'} className={FormCSS.removeAnsBtn} onClick={number !== 0 ? () => remove(elemFromState.id) : undefined}>удалить вопрос</button>\r\n\r\n                    <button type=\"submit\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn}>Завершить</button>\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className={FormCSS.lastBlock}>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n\r\n                <button type={number === 0 ? 'reset' : 'button'} className={FormCSS.removeAnsBtn} onClick={number !== 0 ? () => remove(elemFromState.id) : undefined}>удалить вопрос</button>\r\n\r\n            </div>\r\n        }\r\n    }// /сокращенка для стиля последней кнопки\r\n\r\n    function btnAddAns(bool) { // кнопка добавления ответа\r\n        let copy = [...mainList]\r\n\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        if (bool === 'answerTrue') {\r\n            elemFromState.answerTrue = [...elemFromState.answerTrue, '']\r\n        } else {\r\n            elemFromState.answerFalse = [...elemFromState.answerFalse, '']\r\n        }\r\n\r\n        copy[indexMainStait] = elemFromState\r\n        mainSetList(copy)\r\n        console.log(copy)\r\n    }// /кнопка добавления ответа\r\n\r\n    function setTextAnsw(e, bool) { // реактивная замена ответа в стейте\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        copy[indexMainStait][bool] = e.target.value\r\n        mainSetList(copy)\r\n    } // /реактивная замена ответа в стейте\r\n\r\n    function btnRemoveAns(text, bool) { // кнопка удаления ответа из стейта\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n        let indexAnswerFromMainStait = copy[indexMainStait][bool].findIndex(elem => elem === text)\r\n\r\n        copy[indexMainStait][bool][indexAnswerFromMainStait] = text\r\n\r\n        mainSetList(copy)\r\n    }// /кнопка удаления ответа из стейта\r\n\r\n    function mapList(bool) { // сокращенка для вывода списка ответа\r\n\r\n        let res = elemFromState[bool].map((elem, index) => {\r\n            return <div key={index}>\r\n                {index === 0 ?\r\n                    <input type='text' name={num + bool} value={elem} onChange={(e) => setTextAnsw(e, bool)} className={FormCSS.answer} />\r\n\r\n                    :\r\n\r\n                    <>\r\n                        <input type='text' name={num + bool} value={elem} onChange={(e) => setTextAnsw(e, bool)} className={FormCSS.answer} />\r\n\r\n                        <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id, bool)}>удалить</button>\r\n                        <br />\r\n                    </>\r\n                }\r\n            </div>\r\n        })\r\n        return res\r\n    }// /сокращенка для вывода списка ответа\r\n\r\n\r\n\r\n\r\n    function switchTypeAnswer(type) {\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        copy[indexMainStait].type = type\r\n        copy[indexMainStait].answerTrue = ['']\r\n        copy[indexMainStait].answerFalse = ['']\r\n\r\n        mainSetList(copy)\r\n    }\r\n\r\n    function ChangeTextQue(e) {\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        copy[indexMainStait].text = e.target.value\r\n        mainSetList(copy)\r\n    }\r\n\r\n    return (<div className={FormCSS.blockQUE}>\r\n        <textarea className={FormCSS.textarea} name={num + \"textQUE\"} value={elemFromState.text} placeholder=\"Введите текст вопроса\" onChange={e => ChangeTextQue(e)}></textarea>\r\n\r\n        <div className={FormCSS.type}>\r\n            <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='radio' onClick={() => switchTypeAnswer('radio')} defaultChecked />Один вариант</label>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='text' onClick={() => switchTypeAnswer('text')} />Текст</label>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='checkbox' onClick={() => switchTypeAnswer('checkbox')} />Выбрать несколько</label>\r\n        </div>\r\n        {setAnswers()}\r\n    </div>)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
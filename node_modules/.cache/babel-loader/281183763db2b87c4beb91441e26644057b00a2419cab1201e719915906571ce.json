{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FormCSS from './styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  let [state, setState] = useState('radio');\n  function setAnswers() {\n    if (state == 'radio') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerTrue\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 112\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerFalse\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: FormCSS.textarea,\n        name: \"textQUE\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.type,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: FormCSS.type_para,\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"radio\",\n            onClick: () => setState('radio'),\n            defaultChecked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"text\",\n            onClick: () => setState('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 24\n          }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"checkbox\",\n            onClick: () => setState('checkbox')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 24\n          }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), setAnswers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n// тип ответа формировать на сервере\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */\n_s(Form, \"hScQ6Bo55rxHC4OCI/E6ynws0i8=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","state","setState","setAnswers","children","type","name","className","answer","fileName","_jsxFileName","lineNumber","columnNumber","action","method","textarea","placeholder","type_para","value","onClick","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/Form.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormCSS from './styles/Form.module.css'\r\n\r\nexport default function Form() {\r\n    let [state, setState] = useState('radio')\r\n\r\n    function setAnswers() {\r\n        if (state == 'radio') {\r\n            return (<>\r\n                <label>Верный ответ: <input type=\"text\" name=\"answerTrue\" className={FormCSS.answer} /></label><br />\r\n                <label>Неверный: <input type=\"text\" name=\"answerFalse\" className={FormCSS.answer} /></label>\r\n\r\n                <button>Добавить неверный</button>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <form action=\"\" method=\"post\">\r\n            <textarea className={FormCSS.textarea} name=\"textQUE\" placeholder=\"Введите текст вопроса\"></textarea>\r\n\r\n            <div className={FormCSS.type}>\r\n                <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n                <label><input type=\"radio\" name=\"type\" value='radio' onClick={() => setState('radio')} defaultChecked />Один вариант</label>\r\n                <label><input type=\"radio\" name=\"type\" value='text' onClick={() => setState('text')} />Текст</label>\r\n                <label><input type=\"radio\" name=\"type\" value='checkbox' onClick={() => setState('checkbox')} />Выбрать несколько</label>\r\n            </div>\r\n            {setAnswers()}\r\n            {/* правильный ответ */}\r\n            {/* вариант */}\r\n            {/* добавить вариант */}\r\n        </form>\r\n    </>)\r\n}\r\n// тип ответа формировать на сервере\r\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\r\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\r\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
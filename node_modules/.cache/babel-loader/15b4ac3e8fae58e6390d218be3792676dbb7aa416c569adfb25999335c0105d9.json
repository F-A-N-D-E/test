{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport FormCSS from './styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [stateType, setStateType] = useState('radio');\n  const [listAnswer, setListAnswer] = useState([]);\n  const [stateId, setStateId] = useState(2);\n  /* \r\n      {\r\n      id,\r\n      +name,\r\n  }*/\n\n  function setAnswers() {\n    // ответы\n    if (stateType === 'radio') {\n      // radio btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerTrue_1\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 89\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerFalse_2\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 90\n          }, this), listAnswer.map(elem => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: elem.name,\n                className: FormCSS.answer\n              }, elem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: FormCSS.removeAnsBtn,\n                onClick: () => btnRemoveAns(elem.id),\n                children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns('answerFalse'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else if (stateType === 'text') {\n      // text btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerTrue_1\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 89\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerTrue_2\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 89\n          }, this), listAnswer.map(elem => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: elem.name,\n                className: FormCSS.answer\n              }, elem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: FormCSS.removeAnsBtn,\n                onClick: () => btnRemoveAns(elem.id),\n                children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns('answerTrue'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  function btnAddAns(name) {\n    // кнопка добавления ответа\n    let obj = {\n      id: stateId + 1,\n      name: name + '_' + (stateId + 1)\n    };\n    setListAnswer([...listAnswer, obj]);\n    setStateId(stateId + 1);\n  } // /кнопка добавления ответа\n\n  function btnRemoveAns(id) {\n    // кнопка удаления ответа\n    let copy = listAnswer;\n    let index = copy.findIndex(elem => elem.id == id);\n    copy = copy.splice(index, 1);\n    setListAnswer(copy);\n  } // /кнопка удаления ответа\n\n  function setStateTypeReset(text) {\n    // радио кнопка для выбора типа ответа \n    setStateType(text);\n    setListAnswer([]);\n    setStateId(2);\n  } // /радио кнопка для выбора типа ответа\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: FormCSS.textarea,\n        name: \"textQUE\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.type,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: FormCSS.type_para,\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"radio\",\n            onClick: () => setStateTypeReset('radio'),\n            defaultChecked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 24\n          }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"text\",\n            onClick: () => setStateTypeReset('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 24\n          }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"checkbox\",\n            onClick: () => setStateTypeReset('checkbox')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 24\n          }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), setAnswers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n// тип ответа формировать на сервере\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */\n_s(Form, \"8/m5rPW7sG+odsry/qLELbaf5eE=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useRef","useState","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","stateType","setStateType","listAnswer","setListAnswer","stateId","setStateId","setAnswers","children","className","answer_block","fileName","_jsxFileName","lineNumber","columnNumber","type","name","answer","map","elem","id","removeAnsBtn","onClick","btnRemoveAns","btnAdd","btnAddAns","obj","copy","index","findIndex","splice","setStateTypeReset","text","action","method","textarea","placeholder","type_para","value","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/Form.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nimport FormCSS from './styles/Form.module.css'\r\n\r\nexport default function Form() {\r\n    const [stateType, setStateType] = useState('radio')\r\n\r\n    const [listAnswer, setListAnswer] = useState([])\r\n    const [stateId, setStateId] = useState(2)\r\n    /* \r\n        {\r\n        id,\r\n        +name,\r\n    }*/\r\n\r\n    function setAnswers() { // ответы\r\n        if (stateType === 'radio') { // radio btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name=\"answerTrue_1\" className={FormCSS.answer} /><br />\r\n\r\n                    <p>Неверный: </p>\r\n                    <input type=\"text\" name=\"answerFalse_2\" className={FormCSS.answer} /><br />\r\n\r\n                    {listAnswer.map(elem => {\r\n                        return <>\r\n                            <input key={elem.id} type='text' name={elem.name} className={FormCSS.answer} />\r\n                            <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id)}>удалить</button>\r\n                            <br />\r\n                        </>\r\n                    })}\r\n                </div>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('answerFalse')}>Добавить неверный</button>\r\n            </>)\r\n\r\n\r\n        } else if (stateType === 'text') { // text btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name=\"answerTrue_1\" className={FormCSS.answer} /><br />\r\n\r\n                    <p>Вариант написания правильного ответа: </p>\r\n                    <input type=\"text\" name=\"answerTrue_2\" className={FormCSS.answer} /><br />\r\n\r\n                    {listAnswer.map(elem => {\r\n                        return <>\r\n                            <input key={elem.id} type='text' name={elem.name} className={FormCSS.answer} />\r\n                            <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id)}>удалить</button>\r\n                            <br />\r\n                        </>\r\n                    })}\r\n                </div>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('answerTrue')}>Добавить вариант правильного ответа</button>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    function btnAddAns(name) { // кнопка добавления ответа\r\n        let obj = {\r\n            id: stateId + 1,\r\n            name: name + '_' + (stateId + 1)\r\n        }\r\n        setListAnswer([...listAnswer, obj])\r\n        setStateId(stateId + 1)\r\n    }// /кнопка добавления ответа\r\n\r\n    function btnRemoveAns(id) { // кнопка удаления ответа\r\n        let copy = listAnswer\r\n        let index = copy.findIndex(elem => elem.id == id)\r\n\r\n        copy = copy.splice(index, 1)\r\n        setListAnswer(copy)\r\n    }// /кнопка удаления ответа\r\n\r\n    function setStateTypeReset(text) { // радио кнопка для выбора типа ответа \r\n        setStateType(text)\r\n        setListAnswer([])\r\n        setStateId(2)\r\n    }// /радио кнопка для выбора типа ответа\r\n\r\n    return (<>\r\n        <form action=\"\" method=\"post\">\r\n            <textarea className={FormCSS.textarea} name=\"textQUE\" placeholder=\"Введите текст вопроса\"></textarea>\r\n\r\n            <div className={FormCSS.type}>\r\n                <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n                <label><input type=\"radio\" name=\"type\" value='radio' onClick={() => setStateTypeReset('radio')} defaultChecked />Один вариант</label>\r\n                <label><input type=\"radio\" name=\"type\" value='text' onClick={() => setStateTypeReset('text')} />Текст</label>\r\n                <label><input type=\"radio\" name=\"type\" value='checkbox' onClick={() => setStateTypeReset('checkbox')} />Выбрать несколько</label>\r\n            </div>\r\n            {setAnswers()}\r\n        </form>\r\n    </>)\r\n}\r\n// тип ответа формировать на сервере\r\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\r\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\r\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
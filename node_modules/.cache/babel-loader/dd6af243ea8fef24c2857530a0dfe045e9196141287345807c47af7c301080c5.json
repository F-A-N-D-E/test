{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport FormCSS from './styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [stateType, setStateType] = useState('radio'); // стейт для смены типа ответа\n\n  const [listTrueAnswer, setListTrueAnswer] = useState([]); // стейт верных ответов\n  const [stateTrueId, setStateTrueId] = useState(1); // счетчик айдишников для стейта верных ответов\n\n  const [listFalseAnswer, setListFalseAnswer] = useState([]); // стейт неверных ответов\n  const [stateFalseId, setStateFalseId] = useState(1); // счетчик айдишников для стейта неверных ответов\n  /* \r\n      {\r\n      id,\r\n      name,\r\n      text\r\n  }*/ // структура записей в стейтах ответа\n\n  function setAnswers() {\n    // ответы\n    if (stateType === 'radio') {\n      // radio btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerTrue_1\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 89\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerFalse_1\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 90\n          }, this), listFalseAnswer.map(elem => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: elem.name,\n                value: elem.text,\n                onChange: e => setTextAnsw(e, elem.id),\n                className: FormCSS.answer\n              }, elem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: FormCSS.removeAnsBtn,\n                onClick: () => btnRemoveAns(elem.id),\n                children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns('answerFalse'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else if (stateType === 'text') {\n      // text btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerTrue_1\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 89\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), listTrueAnswer.map(elem => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: elem.name,\n                value: elem.text,\n                onChange: e => setTextAnsw(e, elem.id),\n                className: FormCSS.answer\n              }, elem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: FormCSS.removeAnsBtn,\n                onClick: () => btnRemoveAns(elem.id),\n                children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns('answerTrue'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else if (stateType === 'checkbox') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerTrue_1\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 89\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd,\n            onClick: () => btnAddAns('answerTrue'),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerFalse_1\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 90\n          }, this), listFalseAnswer.map(elem => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: elem.name,\n                value: elem.text,\n                onChange: e => setTextAnsw(e, elem.id),\n                className: FormCSS.answer\n              }, elem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: FormCSS.removeAnsBtn,\n                onClick: () => btnRemoveAns(elem.id),\n                children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns('answerFalse'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  function btnAddAns(name) {\n    // кнопка добавления ответа\n    if (name === 'answerFalse') {\n      setStateTrueId(stateTrueId + 1);\n      let obj = {\n        id: stateTrueId,\n        name: name + '_' + stateTrueId,\n        text: ''\n      };\n      setListTrueAnswer([...listTrueAnswer, obj]);\n    } else {\n      setStateFalseId(stateFalseId + 1);\n      let obj = {\n        id: stateFalseId,\n        name: name + '_' + stateFalseId,\n        text: ''\n      };\n      setListFalseAnswer([...listFalseAnswer, obj]);\n    }\n  } // /кнопка добавления ответа\n\n  function setTextAnsw(e, id) {\n    // реактивная замена ответа в стейте\n    let copy = [...listAnswer];\n    let index = copy.findIndex(elem => elem.id === id);\n    copy[index].text = e.target.value;\n    setListAnswer(copy);\n  } // /реактивная замена ответа в стейте\n\n  function btnRemoveAns(id) {\n    // кнопка удаления ответа из стейта\n    let copy = [...listAnswer];\n    let index = copy.findIndex(elem => elem.id === id);\n    copy.splice(index, 1);\n    setListAnswer(copy);\n  } // /кнопка удаления ответа из стейта\n\n  function mapList() {// сокращенка для вывода списка ответа\n\n    /* {listFalseAnswer.map(elem => {\r\n                    return <>\r\n                        <input key={elem.id} type='text' name={elem.name} value={elem.text} onChange={(e) => setTextAnsw(e, elem.id)} className={FormCSS.answer} />\r\n                        <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id)}>удалить</button>\r\n                        <br />\r\n                    </>\r\n                })} */\n  } // /сокращенка для вывода списка ответа\n\n  function setStateTypeReset(text) {\n    // радио кнопка для выбора типа ответа \n    setStateType(text);\n    setListTrueAnswer([]);\n    setListFalseAnswer([]);\n    setStateTrueId(1);\n    setStateFalseId(1);\n  } // /радио кнопка для выбора типа ответа\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: FormCSS.textarea,\n        name: \"textQUE\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.type,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: FormCSS.type_para,\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"radio\",\n            onClick: () => setStateTypeReset('radio'),\n            defaultChecked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 24\n          }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"text\",\n            onClick: () => setStateTypeReset('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 24\n          }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"checkbox\",\n            onClick: () => setStateTypeReset('checkbox')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 24\n          }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), setAnswers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n// тип ответа формировать на сервере\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */\n_s(Form, \"wDA8IdNltG3NUSjjUj4Tyg7aC4A=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useRef","useState","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","stateType","setStateType","listTrueAnswer","setListTrueAnswer","stateTrueId","setStateTrueId","listFalseAnswer","setListFalseAnswer","stateFalseId","setStateFalseId","setAnswers","children","className","answer_block","fileName","_jsxFileName","lineNumber","columnNumber","type","name","answer","map","elem","value","text","onChange","e","setTextAnsw","id","removeAnsBtn","onClick","btnRemoveAns","btnAdd","btnAddAns","obj","copy","listAnswer","index","findIndex","target","setListAnswer","splice","mapList","setStateTypeReset","action","method","textarea","placeholder","type_para","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/Form.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nimport FormCSS from './styles/Form.module.css'\r\n\r\nexport default function Form() {\r\n    const [stateType, setStateType] = useState('radio') // стейт для смены типа ответа\r\n\r\n    const [listTrueAnswer, setListTrueAnswer] = useState([]) // стейт верных ответов\r\n    const [stateTrueId, setStateTrueId] = useState(1) // счетчик айдишников для стейта верных ответов\r\n\r\n    const [listFalseAnswer, setListFalseAnswer] = useState([]) // стейт неверных ответов\r\n    const [stateFalseId, setStateFalseId] = useState(1) // счетчик айдишников для стейта неверных ответов\r\n    /* \r\n        {\r\n        id,\r\n        name,\r\n        text\r\n    }*/ // структура записей в стейтах ответа\r\n\r\n    function setAnswers() { // ответы\r\n        if (stateType === 'radio') { // radio btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name=\"answerTrue_1\" className={FormCSS.answer} /><br />\r\n\r\n                    <p>Неверный: </p>\r\n                    <input type=\"text\" name=\"answerFalse_1\" className={FormCSS.answer} /><br />\r\n\r\n                    {listFalseAnswer.map(elem => {\r\n                        return <>\r\n                            <input key={elem.id} type='text' name={elem.name} value={elem.text} onChange={(e) => setTextAnsw(e, elem.id)} className={FormCSS.answer} />\r\n                            <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id)}>удалить</button>\r\n                            <br />\r\n                        </>\r\n                    })}\r\n                </div>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('answerFalse')}>Добавить неверный</button>\r\n            </>)\r\n\r\n\r\n        } else if (stateType === 'text') { // text btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name=\"answerTrue_1\" className={FormCSS.answer} /><br />\r\n\r\n                    <p>Вариант написания правильного ответа: </p>\r\n\r\n                    {listTrueAnswer.map(elem => {\r\n                        return <>\r\n                            <input key={elem.id} type='text' name={elem.name} value={elem.text} onChange={(e) => setTextAnsw(e, elem.id)} className={FormCSS.answer} />\r\n                            <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id)}>удалить</button>\r\n                            <br />\r\n                        </>\r\n                    })}\r\n                </div>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('answerTrue')}>Добавить вариант правильного ответа</button>\r\n            </>)\r\n\r\n\r\n        } else if (stateType === 'checkbox') {\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name=\"answerTrue_1\" className={FormCSS.answer} /><br />\r\n                    <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('answerTrue')}>Добавить</button>\r\n\r\n                    <p>Неверный ответ: </p>\r\n                    <input type=\"text\" name=\"answerFalse_1\" className={FormCSS.answer} /><br />\r\n\r\n                    {listFalseAnswer.map(elem => {\r\n                        return <>\r\n                            <input key={elem.id} type='text' name={elem.name} value={elem.text} onChange={(e) => setTextAnsw(e, elem.id)} className={FormCSS.answer} />\r\n                            <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id)}>удалить</button>\r\n                            <br />\r\n                        </>\r\n                    })}\r\n                </div>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('answerFalse')}>Добавить</button>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    function btnAddAns(name) { // кнопка добавления ответа\r\n        if (name === 'answerFalse') {\r\n            setStateTrueId(stateTrueId + 1)\r\n            let obj = {\r\n                id: stateTrueId,\r\n                name: name + '_' + stateTrueId,\r\n                text: ''\r\n            }\r\n            setListTrueAnswer([...listTrueAnswer, obj])\r\n        } else {\r\n            setStateFalseId(stateFalseId + 1)\r\n            let obj = {\r\n                id: stateFalseId,\r\n                name: name + '_' + stateFalseId,\r\n                text: ''\r\n            }\r\n            setListFalseAnswer([...listFalseAnswer, obj])\r\n        }\r\n    }// /кнопка добавления ответа\r\n\r\n    function setTextAnsw(e, id) { // реактивная замена ответа в стейте\r\n        let copy = [...listAnswer]\r\n        let index = copy.findIndex(elem => elem.id === id)\r\n\r\n        copy[index].text = e.target.value\r\n        setListAnswer(copy)\r\n    } // /реактивная замена ответа в стейте\r\n\r\n    function btnRemoveAns(id) { // кнопка удаления ответа из стейта\r\n        let copy = [...listAnswer]\r\n        let index = copy.findIndex(elem => elem.id === id)\r\n\r\n        copy.splice(index, 1)\r\n        setListAnswer(copy)\r\n    }// /кнопка удаления ответа из стейта\r\n\r\n    function mapList() { // сокращенка для вывода списка ответа\r\n\r\n\r\n        /* {listFalseAnswer.map(elem => {\r\n                        return <>\r\n                            <input key={elem.id} type='text' name={elem.name} value={elem.text} onChange={(e) => setTextAnsw(e, elem.id)} className={FormCSS.answer} />\r\n                            <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id)}>удалить</button>\r\n                            <br />\r\n                        </>\r\n                    })} */\r\n    }// /сокращенка для вывода списка ответа\r\n\r\n    function setStateTypeReset(text) { // радио кнопка для выбора типа ответа \r\n        setStateType(text)\r\n        setListTrueAnswer([])\r\n        setListFalseAnswer([])\r\n        setStateTrueId(1)\r\n        setStateFalseId(1)\r\n    }// /радио кнопка для выбора типа ответа\r\n\r\n    return (<>\r\n        <form action=\"\" method=\"post\">\r\n            <textarea className={FormCSS.textarea} name=\"textQUE\" placeholder=\"Введите текст вопроса\"></textarea>\r\n\r\n            <div className={FormCSS.type}>\r\n                <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n                <label><input type=\"radio\" name=\"type\" value='radio' onClick={() => setStateTypeReset('radio')} defaultChecked />Один вариант</label>\r\n                <label><input type=\"radio\" name=\"type\" value='text' onClick={() => setStateTypeReset('text')} />Текст</label>\r\n                <label><input type=\"radio\" name=\"type\" value='checkbox' onClick={() => setStateTypeReset('checkbox')} />Выбрать несколько</label>\r\n            </div>\r\n            {setAnswers()}\r\n        </form>\r\n    </>)\r\n}\r\n// тип ответа формировать на сервере\r\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\r\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\r\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
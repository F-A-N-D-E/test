{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\ResolutionCheck.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResolutionCheck() {\n  _s();\n  let [data, setData] = useState();\n  async function getData() {\n    let paramId = window.location.pathname.split('/')[2];\n    let data = await fetch(`/resolution/${paramId}/check`).then(r => r.json()).then(r => r);\n    setData(data);\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(data);\n  function render() {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: ResolCSS.resH3,\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ResolCSS.res,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: ResolCSS.resP,\n          children: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0412\\u0430\\u0448 \\u043E\\u0442\\u0432\\u0435\\u0442: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0432\\u0430\\u044B\\u0432\\u0430\\u044B\\u0432\\u0430\\u044B\\u0432\\u0430\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: ResolCSS.comments,\n            children: \" // \\u0432\\u0435\\u0440\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ResolutionCheck, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = ResolutionCheck;\nvar _c;\n$RefreshReg$(_c, \"ResolutionCheck\");","map":{"version":3,"names":["React","useEffect","useState","ResolCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","ResolutionCheck","_s","data","setData","getData","paramId","window","location","pathname","split","fetch","then","r","json","console","log","render","children","className","resH3","name","fileName","_jsxFileName","lineNumber","columnNumber","res","resP","comments","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/ResolutionCheck.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nexport default function ResolutionCheck() {\r\n    let [data, setData] = useState()\r\n\r\n    async function getData() {\r\n        let paramId = window.location.pathname.split('/')[2]\r\n\r\n        let data = await fetch(`/resolution/${paramId}/check`).then(r => r.json()).then(r => r)\r\n        setData(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    console.log(data)\r\n\r\n    function render() {\r\n\r\n    }\r\n\r\n    return <>\r\n        {data ? <>\r\n            <h3 className={ResolCSS.resH3}>{data.name}</h3>\r\n            <div className={ResolCSS.res}>\r\n\r\n                <p className={ResolCSS.resP}>Вопрос</p>\r\n                <p>Ваш ответ: <span>ваываываываы</span><span className={ResolCSS.comments}> // верно</span></p>\r\n\r\n            </div>\r\n        </>\r\n            :\r\n            <div>load</div>\r\n        }\r\n    </>\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,QAAQ,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEhC,eAAeU,OAAOA,CAAA,EAAG;IACrB,IAAIC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpD,IAAIP,IAAI,GAAG,MAAMQ,KAAK,CAAC,eAAeL,OAAO,QAAQ,CAAC,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC;IACvFT,OAAO,CAACD,IAAI,CAAC;EACjB;EAEAT,SAAS,CAAC,MAAM;IACZW,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENU,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;EAEjB,SAASc,MAAMA,CAAA,EAAG,CAElB;EAEA,oBAAOnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EACFf,IAAI,gBAAGL,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACJpB,OAAA;QAAIqB,SAAS,EAAEvB,QAAQ,CAACwB,KAAM;QAAAF,QAAA,EAAEf,IAAI,CAACkB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/C3B,OAAA;QAAKqB,SAAS,EAAEvB,QAAQ,CAAC8B,GAAI;QAAAR,QAAA,gBAEzBpB,OAAA;UAAGqB,SAAS,EAAEvB,QAAQ,CAAC+B,IAAK;UAAAT,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvC3B,OAAA;UAAAoB,QAAA,GAAG,qDAAW,eAAApB,OAAA;YAAAoB,QAAA,EAAM;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAAA3B,OAAA;YAAMqB,SAAS,EAAEvB,QAAQ,CAACgC,QAAS;YAAAV,QAAA,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9F,CAAC;IAAA,eACR,CAAC,gBAEC3B,OAAA;MAAAoB,QAAA,EAAK;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAErB,CAAC;AACP;AAACvB,EAAA,CAlCuBD,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\Resolution.jsx\";\nimport React from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Resolution({\n  data,\n  num\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: ResolCSS.resP,\n      children: [num + 1, \". \", data.textQUE]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ResolCSS.variant,\n      children: [data.answer.map((elem, index) => {\n        if (data.type === 'radio') {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            className: ResolCSS.label,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: data.textQUE,\n              value: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 74\n            }, this), elem]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 28\n          }, this);\n        } else if (data.type === 'checkbox') {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            className: ResolCSS.label,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: data.textQUE,\n              value: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 74\n            }, this), elem]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 28\n          }, this);\n        }\n        return undefined;\n      }), data.type === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: ResolCSS.input,\n        type: \"text\",\n        name: data.textQUE,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Resolution;\nvar _c;\n$RefreshReg$(_c, \"Resolution\");","map":{"version":3,"names":["React","ResolCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","Resolution","data","num","children","className","resP","textQUE","fileName","_jsxFileName","lineNumber","columnNumber","variant","answer","map","elem","index","type","label","name","value","undefined","input","autoComplete","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/Resolution.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nexport default function Resolution({ data, num }) {\r\n\r\n    return <>\r\n        <p className={ResolCSS.resP}>{num + 1}. {data.textQUE}</p>\r\n\r\n        <div className={ResolCSS.variant}>\r\n\r\n            {data.answer.map((elem, index) => {\r\n                if (data.type === 'radio') {\r\n                    return <label className={ResolCSS.label} key={index}><input type=\"radio\" name={data.textQUE} value={elem} />{elem}</label>\r\n                } else if (data.type === 'checkbox') {\r\n                    return <label className={ResolCSS.label} key={index}><input type=\"checkbox\" name={data.textQUE} value={elem} />{elem}</label>\r\n                }\r\n                return undefined\r\n            })}\r\n            {data.type === 'text' && <input className={ResolCSS.input} type=\"text\" name={data.textQUE} autoComplete=\"off\" />}\r\n\r\n        </div>\r\n\r\n    </>\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,eAAe,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAI,CAAC,EAAE;EAE9C,oBAAOL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACHN,OAAA;MAAGO,SAAS,EAAET,QAAQ,CAACU,IAAK;MAAAF,QAAA,GAAED,GAAG,GAAG,CAAC,EAAC,IAAE,EAACD,IAAI,CAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1Db,OAAA;MAAKO,SAAS,EAAET,QAAQ,CAACgB,OAAQ;MAAAR,QAAA,GAE5BF,IAAI,CAACW,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC9B,IAAId,IAAI,CAACe,IAAI,KAAK,OAAO,EAAE;UACvB,oBAAOnB,OAAA;YAAOO,SAAS,EAAET,QAAQ,CAACsB,KAAM;YAAAd,QAAA,gBAAaN,OAAA;cAAOmB,IAAI,EAAC,OAAO;cAACE,IAAI,EAAEjB,IAAI,CAACK,OAAQ;cAACa,KAAK,EAAEL;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAACI,IAAI;UAAA,GAAnEC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAsE,CAAC;QAC9H,CAAC,MAAM,IAAIT,IAAI,CAACe,IAAI,KAAK,UAAU,EAAE;UACjC,oBAAOnB,OAAA;YAAOO,SAAS,EAAET,QAAQ,CAACsB,KAAM;YAAAd,QAAA,gBAAaN,OAAA;cAAOmB,IAAI,EAAC,UAAU;cAACE,IAAI,EAAEjB,IAAI,CAACK,OAAQ;cAACa,KAAK,EAAEL;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAACI,IAAI;UAAA,GAAtEC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyE,CAAC;QACjI;QACA,OAAOU,SAAS;MACpB,CAAC,CAAC,EACDnB,IAAI,CAACe,IAAI,KAAK,MAAM,iBAAInB,OAAA;QAAOO,SAAS,EAAET,QAAQ,CAAC0B,KAAM;QAACL,IAAI,EAAC,MAAM;QAACE,IAAI,EAAEjB,IAAI,CAACK,OAAQ;QAACgB,YAAY,EAAC;MAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/G,CAAC;EAAA,eAER,CAAC;AACP;AAACa,EAAA,GApBuBvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
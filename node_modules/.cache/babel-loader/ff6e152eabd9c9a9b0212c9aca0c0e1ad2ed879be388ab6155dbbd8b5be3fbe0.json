{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\FormCreate\\\\QUEForm.jsx\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport FormCSS from '../styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QUEForm({\n  elemFromState,\n  number,\n  remove,\n  last,\n  add,\n  mainList,\n  mainSetList,\n  refNullInput,\n  stopSend\n}) {\n  /* \r\n      key={index}\r\n      id={elem}\r\n      number={index}\r\n      remove={remove}\r\n      last={index === list.length - 1 ? true : false}\r\n      add={add}\r\n        const [list, setList] = useState({\r\n      id: qwe,\r\n      type: 'type',\r\n      text: 'qwe',\r\n      answerTrue: [],\r\n      answerFalse: []\r\n      }) \r\n  */\n\n  let num = number + '_';\n  function setAnswers() {\n    // отоброжение по типу ответа\n    if (elemFromState.type === 'radio') {\n      // radio btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), mapList('answerTrue'), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    } else if (elemFromState.type === 'text') {\n      // text btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: FormCSS.pInTextType,\n            children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0433\\u043E \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), mapList('answerTrue')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), lastBtn('answerTrue')]\n      }, void 0, true);\n    } else if (elemFromState.type === 'checkbox') {\n      // checkbox\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), mapList('answerTrue'), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.margin_bottom,\n            onClick: () => btnAddAns('answerTrue'),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    }\n  } // /отоброжение по типу ответа\n\n  function lastBtn(bool) {\n    // сокращенка для стиля последней кнопки 'завершить', \"добавить вопрос\"\n    if (last) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            onClick: () => add(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: number === 0 ? 'reset' : 'button',\n            className: FormCSS.removeAnsBtn,\n            onClick: number !== 0 || mainList.length > 1 ? () => remove(elemFromState.id) : undefined,\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            onClick: e => {\n              if (stopSend()) e.preventDefault();\n            },\n            children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: number === 0 ? 'reset' : 'button',\n          className: FormCSS.removeAnsBtn,\n          onClick: number !== 0 || mainList.length > 1 ? () => remove(elemFromState.id) : undefined,\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this);\n    }\n  } // /сокращенка для стиля последней кнопки\n\n  function btnAddAns(bool) {\n    // кнопка добавления ответа\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    if (bool === 'answerTrue') {\n      elemFromState.answerTrue = [...elemFromState.answerTrue, [nanoid(3), '']];\n    } else {\n      elemFromState.answerFalse = [...elemFromState.answerFalse, [nanoid(3), '']];\n    }\n    copy[indexMainStait] = elemFromState;\n    mainSetList(copy);\n  } // /кнопка добавления ответа\n\n  function setTextAnsw(e, bool, id) {\n    // реактивная замена ответа в стейте\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id);\n    copy[indexMainStait][bool][indexAnswerInMainState][1] = e.target.value;\n    mainSetList(copy);\n  } // /реактивная замена ответа в стейте\n\n  function btnRemoveAns(id, bool) {\n    // кнопка удаления ответа из стейта\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id);\n    copy[indexMainStait][bool].splice(indexAnswerInMainState, 1);\n    mainSetList(copy);\n  } // /кнопка удаления ответа из стейта\n\n  function mapList(bool) {\n    // сокращенка для вывода списка ответа\n\n    let res = elemFromState[bool].map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: num + bool,\n          value: elem[1],\n          onChange: e => setTextAnsw(e, bool, elem[0]),\n          className: FormCSS.answer,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + bool,\n            value: elem[1],\n            onChange: e => setTextAnsw(e, bool, elem[0]),\n            className: FormCSS.answer,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.removeAnsBtn,\n            onClick: () => btnRemoveAns(elem[0], bool),\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this);\n    });\n    return res;\n  } // /сокращенка для вывода списка ответа\n\n  function switchTypeAnswer(type) {\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    copy[indexMainStait].type = type;\n    copy[indexMainStait].answerTrue = [[nanoid(3), '']];\n    copy[indexMainStait].answerFalse = [[nanoid(3), '']];\n    mainSetList(copy);\n  }\n  function ChangeTextQue(e) {\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    copy[indexMainStait].text = e.target.value;\n    mainSetList(copy);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: FormCSS.blockQUE,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: FormCSS.textarea,\n      name: num + \"textQUE\",\n      value: elemFromState.text,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\",\n      onChange: e => ChangeTextQue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: FormCSS.type,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: FormCSS.type_para,\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"radio\",\n          onClick: () => switchTypeAnswer('radio'),\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 20\n        }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"text\",\n          onClick: () => switchTypeAnswer('text')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 20\n        }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"checkbox\",\n          onClick: () => switchTypeAnswer('checkbox')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 20\n        }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), setAnswers()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 13\n  }, this);\n}\n_c = QUEForm;\nvar _c;\n$RefreshReg$(_c, \"QUEForm\");","map":{"version":3,"names":["React","nanoid","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","QUEForm","elemFromState","number","remove","last","add","mainList","mainSetList","refNullInput","stopSend","num","setAnswers","type","children","className","answer_block","fileName","_jsxFileName","lineNumber","columnNumber","mapList","lastBtn","pInTextType","btnAdd","margin_bottom","onClick","btnAddAns","bool","lastBlock","removeAnsBtn","length","id","undefined","e","preventDefault","copy","indexMainStait","findIndex","elem","answerTrue","answerFalse","setTextAnsw","indexAnswerInMainState","target","value","btnRemoveAns","splice","res","map","index","name","onChange","answer","autoComplete","switchTypeAnswer","ChangeTextQue","text","blockQUE","textarea","placeholder","type_para","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/FormCreate/QUEForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport FormCSS from '../styles/Form.module.css'\r\n\r\nexport default function QUEForm({ elemFromState, number, remove, last, add, mainList, mainSetList, refNullInput, stopSend }) {\r\n    /* \r\n        key={index}\r\n        id={elem}\r\n        number={index}\r\n        remove={remove}\r\n        last={index === list.length - 1 ? true : false}\r\n        add={add}\r\n\r\n        const [list, setList] = useState({\r\n        id: qwe,\r\n        type: 'type',\r\n        text: 'qwe',\r\n        answerTrue: [],\r\n        answerFalse: []\r\n        }) \r\n    */\r\n\r\n\r\n\r\n\r\n    let num = number + '_'\r\n\r\n    function setAnswers() { // отоброжение по типу ответа\r\n        if (elemFromState.type === 'radio') { // radio btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    {mapList('answerTrue')}\r\n\r\n                    <p>Неверный: </p>\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n\r\n\r\n        } else if (elemFromState.type === 'text') { // text btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p className={FormCSS.pInTextType}>Вариант возможного написания правильного ответа: </p>\r\n\r\n                    {mapList('answerTrue')}\r\n                </div>\r\n\r\n                {lastBtn('answerTrue')}\r\n            </>)\r\n\r\n\r\n        } else if (elemFromState.type === 'checkbox') { // checkbox\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    {mapList('answerTrue')}\r\n\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.margin_bottom} onClick={() => btnAddAns('answerTrue')}>Добавить</button>\r\n\r\n                    <p>Неверный ответ: </p>\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n        }\r\n    } // /отоброжение по типу ответа\r\n\r\n    function lastBtn(bool) { // сокращенка для стиля последней кнопки 'завершить', \"добавить вопрос\"\r\n        if (last) {\r\n            return <div className={FormCSS.lastBlock}>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n\r\n                <div>\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => add()}>Добавить вопрос</button>\r\n\r\n                    <button type={number === 0 ? 'reset' : 'button'} className={FormCSS.removeAnsBtn} onClick={(number !== 0 || mainList.length > 1) ? () => remove(elemFromState.id) : undefined}>удалить вопрос</button>\r\n\r\n                    <button type=\"submit\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={(e) => { if (stopSend()) e.preventDefault() }}>Завершить</button>\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className={FormCSS.lastBlock}>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n\r\n                <button type={number === 0 ? 'reset' : 'button'} className={FormCSS.removeAnsBtn} onClick={(number !== 0 || mainList.length > 1) ? () => remove(elemFromState.id) : undefined}>удалить вопрос</button>\r\n\r\n            </div>\r\n        }\r\n    }// /сокращенка для стиля последней кнопки\r\n\r\n    function btnAddAns(bool) { // кнопка добавления ответа\r\n        let copy = [...mainList]\r\n\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        if (bool === 'answerTrue') {\r\n            elemFromState.answerTrue = [...elemFromState.answerTrue,\r\n            [nanoid(3), '']\r\n            ]\r\n        } else {\r\n            elemFromState.answerFalse = [...elemFromState.answerFalse,\r\n            [nanoid(3), '']\r\n            ]\r\n        }\r\n\r\n        copy[indexMainStait] = elemFromState\r\n        mainSetList(copy)\r\n    }// /кнопка добавления ответа\r\n\r\n    function setTextAnsw(e, bool, id) { // реактивная замена ответа в стейте\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n        let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id)\r\n\r\n        copy[indexMainStait][bool][indexAnswerInMainState][1] = e.target.value\r\n\r\n        mainSetList(copy)\r\n    } // /реактивная замена ответа в стейте\r\n\r\n    function btnRemoveAns(id, bool) { // кнопка удаления ответа из стейта\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n        let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id)\r\n\r\n        copy[indexMainStait][bool].splice(indexAnswerInMainState, 1)\r\n\r\n        mainSetList(copy)\r\n    }// /кнопка удаления ответа из стейта\r\n\r\n    function mapList(bool) { // сокращенка для вывода списка ответа\r\n\r\n        let res = elemFromState[bool].map((elem, index) => {\r\n            return <div key={index}>\r\n                {index === 0 ?\r\n                    <input type='text' name={num + bool} value={elem[1]} onChange={(e) => setTextAnsw(e, bool, elem[0])} className={FormCSS.answer} autoComplete=\"off\" />\r\n\r\n                    :\r\n\r\n                    <>\r\n                        <input type='text' name={num + bool} value={elem[1]} onChange={(e) => setTextAnsw(e, bool, elem[0])} className={FormCSS.answer} autoComplete=\"off\" />\r\n\r\n                        <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem[0], bool)}>удалить</button>\r\n                        <br />\r\n                    </>\r\n                }\r\n            </div>\r\n        })\r\n        return res\r\n    }// /сокращенка для вывода списка ответа\r\n\r\n\r\n\r\n\r\n    function switchTypeAnswer(type) {\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        copy[indexMainStait].type = type\r\n        copy[indexMainStait].answerTrue = [\r\n            [nanoid(3), '']\r\n        ]\r\n        copy[indexMainStait].answerFalse = [\r\n            [nanoid(3), '']\r\n        ]\r\n\r\n        mainSetList(copy)\r\n    }\r\n\r\n    function ChangeTextQue(e) {\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        copy[indexMainStait].text = e.target.value\r\n        mainSetList(copy)\r\n    }\r\n\r\n    return (<div className={FormCSS.blockQUE}>\r\n        <textarea className={FormCSS.textarea} name={num + \"textQUE\"} value={elemFromState.text} placeholder=\"Введите текст вопроса\" onChange={e => ChangeTextQue(e)} ></textarea>\r\n\r\n        <div className={FormCSS.type}>\r\n            <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='radio' onClick={() => switchTypeAnswer('radio')} defaultChecked />Один вариант</label>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='text' onClick={() => switchTypeAnswer('text')} />Текст</label>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='checkbox' onClick={() => switchTypeAnswer('checkbox')} />Выбрать несколько</label>\r\n        </div>\r\n        {setAnswers()}\r\n    </div>)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
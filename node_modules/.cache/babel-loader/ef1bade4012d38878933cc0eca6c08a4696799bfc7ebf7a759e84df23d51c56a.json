{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport FormCSS from './styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [stateType, setStateType] = useState('radio');\n  const [listAnswer, setListAnswer] = useState([]);\n  const [stateId, setStateId] = useState(2);\n  /* \r\n      {\r\n      id,\r\n      +name,\r\n  }*/\n\n  function setAnswers() {\n    if (stateType === 'radio') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answerTrue_1\",\n              className: FormCSS.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 118\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answerFalse_2\",\n              className: FormCSS.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 115\n          }, this), listAnswer.map(elem => {\n            console.log(elem.id);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: elem.name,\n                className: FormCSS.answer\n              }, elem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 113\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns('radio', 'answerFalse'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  // как добавлять варианты через стейт, не задевая другие вопросы и не создавать другие стейты\n\n  function btnAddAns(type, name) {\n    let obj = {\n      id: stateId + 1,\n      name: name\n    };\n    setListAnswer([...listAnswer, obj]);\n    setStateId(stateId + 1);\n    // console.log(stateId)\n    // console.log(listAnswer)\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: FormCSS.textarea,\n        name: \"textQUE\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.type,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: FormCSS.type_para,\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"radio\",\n            onClick: () => setStateType('radio'),\n            defaultChecked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"text\",\n            onClick: () => setStateType('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 24\n          }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"checkbox\",\n            onClick: () => setStateType('checkbox')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), setAnswers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n// тип ответа формировать на сервере\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */\n_s(Form, \"8/m5rPW7sG+odsry/qLELbaf5eE=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useRef","useState","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","stateType","setStateType","listAnswer","setListAnswer","stateId","setStateId","setAnswers","children","type","name","className","answer","fileName","_jsxFileName","lineNumber","columnNumber","map","elem","console","log","id","btnAdd","onClick","btnAddAns","obj","action","method","textarea","placeholder","type_para","value","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/Form.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nimport FormCSS from './styles/Form.module.css'\r\n\r\nexport default function Form() {\r\n    const [stateType, setStateType] = useState('radio')\r\n\r\n    const [listAnswer, setListAnswer] = useState([])\r\n    const [stateId, setStateId] = useState(2)\r\n    /* \r\n        {\r\n        id,\r\n        +name,\r\n    }*/\r\n\r\n    function setAnswers() {\r\n        if (stateType === 'radio') {\r\n            return (<>\r\n                <div>\r\n                    <label>Верный ответ: <input type=\"text\" name=\"answerTrue_1\" className={FormCSS.answer} /></label><br />\r\n                    <label>Неверный: <input type=\"text\" name=\"answerFalse_2\" className={FormCSS.answer} /></label><br />\r\n\r\n                    {listAnswer.map(elem => {\r\n                        console.log(elem.id)\r\n                        return <><input key={elem.id} type='text' name={elem.name} className={FormCSS.answer} /><br /></>\r\n                    })}\r\n                </div>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('radio', 'answerFalse')}>Добавить неверный</button>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    // как добавлять варианты через стейт, не задевая другие вопросы и не создавать другие стейты\r\n\r\n    function btnAddAns(type, name) {\r\n        let obj = {\r\n            id: stateId + 1,\r\n            name: name\r\n        }\r\n        setListAnswer([...listAnswer, obj])\r\n        setStateId(stateId + 1)\r\n        // console.log(stateId)\r\n        // console.log(listAnswer)\r\n    }\r\n\r\n    return (<>\r\n        <form action=\"\" method=\"post\">\r\n            <textarea className={FormCSS.textarea} name=\"textQUE\" placeholder=\"Введите текст вопроса\"></textarea>\r\n\r\n            <div className={FormCSS.type}>\r\n                <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n                <label><input type=\"radio\" name=\"type\" value='radio' onClick={() => setStateType('radio')} defaultChecked />Один вариант</label>\r\n                <label><input type=\"radio\" name=\"type\" value='text' onClick={() => setStateType('text')} />Текст</label>\r\n                <label><input type=\"radio\" name=\"type\" value='checkbox' onClick={() => setStateType('checkbox')} />Выбрать несколько</label>\r\n            </div>\r\n            {setAnswers()}\r\n        </form>\r\n    </>)\r\n}\r\n// тип ответа формировать на сервере\r\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\r\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\r\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\ResolutionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport Resolution from \"./Resolution\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResolutionForm() {\n  _s();\n  let [data, setData] = useState([]);\n  const getTest = async () => {\n    let paramId = window.location.pathname.split('/')[2];\n    let dataProcess = {};\n    let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data);\n    for (let key in dataFromServer) {\n      if ((+key[0] || +key[0] === 0) && !key.split('_')[1].startsWith('answer')) {\n        dataProcess[+key[0]] = {\n          ...dataProcess[+key[0]],\n          [key.slice(2)]: dataFromServer[key]\n        };\n      } else if (key.split('_')[0] === 'nameTest') {\n        dataProcess.info = dataFromServer[key];\n      } else if (key.split('_')[1]) {\n        dataProcess[+key[0]].answer = {\n          ...dataProcess[+key[0]].answer,\n          [key]: dataFromServer[key]\n        };\n      }\n    }\n    for (let key in dataProcess) {\n      if (dataProcess[key].answer) {\n        dataProcess[key].answer = Object.values(dataProcess[key].answer);\n      }\n    }\n    setData(Object.values(dataProcess));\n  }; // переделать эту операцию на сервер\n\n  useEffect(() => {\n    getTest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    action: \"\",\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [data.map((elem, index) => {\n        if (typeof elem !== 'object') {\n          return /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: ResolCSS.resH3,\n            children: elem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }, this);\n        }\n      }), data.map((elem, index) => {\n        if (typeof elem === 'object') {\n          return /*#__PURE__*/_jsxDEV(Resolution, {\n            data: elem,\n            num: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 28\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ResolCSS.btnAdd,\n        type: \"submit\",\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n_s(ResolutionForm, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ResolutionForm;\nvar _c;\n$RefreshReg$(_c, \"ResolutionForm\");","map":{"version":3,"names":["React","useEffect","useState","ResolCSS","Resolution","jsxDEV","_jsxDEV","Fragment","_Fragment","ResolutionForm","_s","data","setData","getTest","paramId","window","location","pathname","split","dataProcess","dataFromServer","fetch","then","res","json","r","key","startsWith","slice","info","answer","Object","values","method","action","children","map","elem","index","className","resH3","fileName","_jsxFileName","lineNumber","columnNumber","num","btnAdd","type","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/ResolutionForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nimport Resolution from \"./Resolution\";\r\n\r\nexport default function ResolutionForm() {\r\n    let [data, setData] = useState([])\r\n\r\n    const getTest = async () => {\r\n        let paramId = window.location.pathname.split('/')[2]\r\n        let dataProcess = {}\r\n        let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data)\r\n\r\n        for (let key in dataFromServer) {\r\n            if ((+key[0] || +key[0] === 0) && !key.split('_')[1].startsWith('answer')) {\r\n                dataProcess[+key[0]] = {\r\n                    ...dataProcess[+key[0]],\r\n                    [key.slice(2)]: dataFromServer[key]\r\n                }\r\n\r\n            } else if (key.split('_')[0] === 'nameTest') {\r\n                dataProcess.info = dataFromServer[key]\r\n\r\n            } else if (key.split('_')[1]) {\r\n                dataProcess[+key[0]].answer = {\r\n                    ...dataProcess[+key[0]].answer,\r\n                    [key]: dataFromServer[key]\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in dataProcess) {\r\n            if (dataProcess[key].answer) {\r\n                dataProcess[key].answer = Object.values(dataProcess[key].answer)\r\n            }\r\n        }\r\n\r\n        setData(Object.values(dataProcess))\r\n    } // переделать эту операцию на сервер\r\n\r\n    useEffect(() => {\r\n        getTest()\r\n    }, [])\r\n\r\n    return <form method=\"post\" action=''>\r\n        {data ? <>\r\n\r\n            {data.map((elem, index) => {\r\n                if (typeof elem !== 'object') {\r\n                    return <h3 className={ResolCSS.resH3} key={index}>{elem}</h3>\r\n                }\r\n            })}\r\n\r\n            {data.map((elem, index) => {\r\n                if (typeof elem === 'object') {\r\n                    return <Resolution key={index} data={elem} num={index + 1} />\r\n                }\r\n            })}\r\n\r\n\r\n\r\n            <button className={ResolCSS.btnAdd} type=\"submit\">Завершить</button>\r\n        </>\r\n            : <div>Загрузка</div>}\r\n    </form>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\Resolution.jsx\";\nimport React from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Resolution({\n  data,\n  num\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ResolCSS.res,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: ResolCSS.resP,\n      children: [num + 1, \". \", data.textQUE]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ResolCSS.variant,\n      children: [data.answer.map((elem, index) => {\n        if (data.type === 'radio') {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            className: ResolCSS.label,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: data.textQUE,\n              value: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 74\n            }, this), elem]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 28\n          }, this);\n        } else if (data.type === 'checkbox') {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            className: ResolCSS.label,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: data.textQUE,\n              value: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 74\n            }, this), elem]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 28\n          }, this);\n        } /* else if (data.type === 'text') {\r\n            return <input key={index} className={ResolCSS.input} type=\"text\" name={data.textQUE} />\r\n          } */\n      }), data.type === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: ResolCSS.input,\n        type: \"text\",\n        name: data.textQUE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_c = Resolution;\nvar _c;\n$RefreshReg$(_c, \"Resolution\");","map":{"version":3,"names":["React","ResolCSS","jsxDEV","_jsxDEV","Resolution","data","num","className","res","children","resP","textQUE","fileName","_jsxFileName","lineNumber","columnNumber","variant","answer","map","elem","index","type","label","name","value","input","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/Resolution.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nexport default function Resolution({ data, num }) {\r\n\r\n    return <div className={ResolCSS.res}>\r\n        <p className={ResolCSS.resP}>{num + 1}. {data.textQUE}</p>\r\n\r\n        <div className={ResolCSS.variant}>\r\n\r\n            {data.answer.map((elem, index) => {\r\n                if (data.type === 'radio') {\r\n                    return <label className={ResolCSS.label} key={index}><input type=\"radio\" name={data.textQUE} value={elem} />{elem}</label>\r\n                } else if (data.type === 'checkbox') {\r\n                    return <label className={ResolCSS.label} key={index}><input type=\"checkbox\" name={data.textQUE} value={elem} />{elem}</label>\r\n                } /* else if (data.type === 'text') {\r\n                    return <input key={index} className={ResolCSS.input} type=\"text\" name={data.textQUE} />\r\n                } */\r\n            })}\r\n            {data.type === 'text' && <input className={ResolCSS.input} type=\"text\" name={data.textQUE} />}\r\n\r\n        </div>\r\n\r\n    </div>\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAI,CAAC,EAAE;EAE9C,oBAAOH,OAAA;IAAKI,SAAS,EAAEN,QAAQ,CAACO,GAAI;IAAAC,QAAA,gBAChCN,OAAA;MAAGI,SAAS,EAAEN,QAAQ,CAACS,IAAK;MAAAD,QAAA,GAAEH,GAAG,GAAG,CAAC,EAAC,IAAE,EAACD,IAAI,CAACM,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1DZ,OAAA;MAAKI,SAAS,EAAEN,QAAQ,CAACe,OAAQ;MAAAP,QAAA,GAE5BJ,IAAI,CAACY,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC9B,IAAIf,IAAI,CAACgB,IAAI,KAAK,OAAO,EAAE;UACvB,oBAAOlB,OAAA;YAAOI,SAAS,EAAEN,QAAQ,CAACqB,KAAM;YAAAb,QAAA,gBAAaN,OAAA;cAAOkB,IAAI,EAAC,OAAO;cAACE,IAAI,EAAElB,IAAI,CAACM,OAAQ;cAACa,KAAK,EAAEL;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAACI,IAAI;UAAA,GAAnEC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAsE,CAAC;QAC9H,CAAC,MAAM,IAAIV,IAAI,CAACgB,IAAI,KAAK,UAAU,EAAE;UACjC,oBAAOlB,OAAA;YAAOI,SAAS,EAAEN,QAAQ,CAACqB,KAAM;YAAAb,QAAA,gBAAaN,OAAA;cAAOkB,IAAI,EAAC,UAAU;cAACE,IAAI,EAAElB,IAAI,CAACM,OAAQ;cAACa,KAAK,EAAEL;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAACI,IAAI;UAAA,GAAtEC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyE,CAAC;QACjI,CAAC,CAAC;AAClB;AACA;MACY,CAAC,CAAC,EACDV,IAAI,CAACgB,IAAI,KAAK,MAAM,iBAAIlB,OAAA;QAAOI,SAAS,EAAEN,QAAQ,CAACwB,KAAM;QAACJ,IAAI,EAAC,MAAM;QAACE,IAAI,EAAElB,IAAI,CAACM;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AACV;AAACW,EAAA,GArBuBtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\ResolutionCheck.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResolutionCheck() {\n  _s();\n  let [data, setData] = useState();\n  let param = useParams();\n  async function getData() {\n    let dataFromDB = await fetch(`/resolution/${param.id}/check`).then(r => r.json()).then(r => r);\n    let copy = {\n      ...dataFromDB\n    };\n    setData(copy);\n    console.log(dataFromDB);\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: ResolCSS.resH3,\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), render().map((elem, index, arr) => {\n        if (index === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: ResolCSS.res + ' ' + ResolCSS.topBorder,\n            children: elem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 28\n          }, this);\n        } else if (index + 1 === arr.length) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: ResolCSS.sum,\n            children: elem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 28\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: ResolCSS.res,\n            children: elem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 28\n          }, this);\n        }\n      })]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n  function render() {\n    let arr = [];\n    let countTrueAnswer = 0;\n    let userAnswer = data.data,\n      tureAnswer = data.tureAnswer;\n    for (let keyUserAnswer in userAnswer) {\n      let res;\n      let valueFuncSpan = setSpan(userAnswer[keyUserAnswer], tureAnswer[keyUserAnswer]);\n      res = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: ResolCSS.resP,\n          children: [arr.length + 1, \". \", keyUserAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ResolCSS.variant,\n          children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F: \", typeof userAnswer[keyUserAnswer] === 'object' ? userAnswer[keyUserAnswer].join(', ') : userAnswer[keyUserAnswer], \" \", valueFuncSpan[0], \" \", setDivTrueAns(valueFuncSpan[1], tureAnswer[keyUserAnswer])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n      arr.push(res);\n    }\n    arr.push(countTrueAnswer + ' из ' + Object.keys(userAnswer).length);\n    return arr;\n    function setSpan(user, check) {\n      let arr = [];\n      let includeUserAns = check.includes(user);\n      if (typeof check === 'object' && typeof user === 'string' && includeUserAns) {\n        ++countTrueAnswer;\n        arr = [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: ResolCSS.comments + ' ' + ResolCSS.true,\n          children: '// верно'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 24\n        }, this), true];\n        // eslint-disable-next-line eqeqeq\n      } else if (check == user) {\n        ++countTrueAnswer;\n        arr = [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: ResolCSS.comments + ' ' + ResolCSS.true,\n          children: '// верно'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 24\n        }, this), true];\n      } else if (typeof check === 'object' && typeof user === 'object') {\n        let num = 0;\n        for (let elem of check) {\n          if (user.includes(elem)) num += 1;\n        }\n        if (num === check.length) {\n          ++countTrueAnswer;\n          arr = [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: ResolCSS.comments + ' ' + ResolCSS.true,\n            children: '// верно'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 28\n          }, this), true];\n        } else {\n          arr = [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: ResolCSS.comments + ' ' + ResolCSS.false,\n            children: '// неверно'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 28\n          }, this), false];\n        }\n      } else {\n        arr = [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: ResolCSS.comments + ' ' + ResolCSS.false,\n          children: '// неверно'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 24\n        }, this), false];\n      }\n      return arr;\n    }\n    function setDivTrueAns(spanBool, check) {\n      if (spanBool === false) {\n        return typeof check === 'string' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ResolCSS.comments,\n          children: [\"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \", check]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ResolCSS.comments,\n          children: [\"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \", check.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n}\n_s(ResolutionCheck, \"I7eeXstVqZyeXNUR95ckZfjgzBM=\", false, function () {\n  return [useParams];\n});\n_c = ResolutionCheck;\nvar _c;\n$RefreshReg$(_c, \"ResolutionCheck\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ResolCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","ResolutionCheck","_s","data","setData","param","getData","dataFromDB","fetch","id","then","r","json","copy","console","log","children","className","resH3","name","fileName","_jsxFileName","lineNumber","columnNumber","render","map","elem","index","arr","res","topBorder","length","sum","countTrueAnswer","userAnswer","tureAnswer","keyUserAnswer","valueFuncSpan","setSpan","resP","variant","join","setDivTrueAns","push","Object","keys","user","check","includeUserAns","includes","comments","true","num","false","spanBool","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/ResolutionCheck.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nexport default function ResolutionCheck() {\r\n    let [data, setData] = useState()\r\n    let param = useParams()\r\n\r\n    async function getData() {\r\n        let dataFromDB = await fetch(`/resolution/${param.id}/check`).then(r => r.json()).then(r => r)\r\n        let copy = { ...dataFromDB }\r\n\r\n        setData(copy)\r\n        console.log(dataFromDB)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return <>\r\n        {data ? <>\r\n\r\n            <div><h3 className={ResolCSS.resH3}>{data.name}</h3></div>\r\n\r\n            {render().map((elem, index, arr) => {\r\n                if (index === 0) {\r\n                    return <div key={index} className={ResolCSS.res + ' ' + ResolCSS.topBorder}>\r\n                        {elem}\r\n                    </div>\r\n                } else if (index + 1 === arr.length) {\r\n                    return <div key={index} className={ResolCSS.sum}>\r\n                        {elem}\r\n                    </div>\r\n                } else {\r\n                    return <div key={index} className={ResolCSS.res}>\r\n                        {elem}\r\n                    </div>\r\n                }\r\n            })}\r\n\r\n        </>\r\n            :\r\n            <div>load</div>\r\n        }\r\n    </>\r\n\r\n\r\n\r\n    function render() {\r\n        let arr = []\r\n        let countTrueAnswer = 0\r\n\r\n        let userAnswer = data.data,\r\n            tureAnswer = data.tureAnswer;\r\n\r\n        for (let keyUserAnswer in userAnswer) {\r\n            let res\r\n            let valueFuncSpan = setSpan(userAnswer[keyUserAnswer], tureAnswer[keyUserAnswer])\r\n\r\n\r\n            res = <><p className={ResolCSS.resP}>{arr.length + 1}. {keyUserAnswer}</p>\r\n                <div className={ResolCSS.variant}>Ответ пользователя: {typeof userAnswer[keyUserAnswer] === 'object' ?\r\n                    userAnswer[keyUserAnswer].join(', ') : userAnswer[keyUserAnswer]\r\n                } {valueFuncSpan[0]} {setDivTrueAns(valueFuncSpan[1], tureAnswer[keyUserAnswer])}\r\n\r\n                </div></>\r\n\r\n\r\n\r\n            arr.push(res)\r\n        }\r\n\r\n        arr.push(countTrueAnswer + ' из ' + Object.keys(userAnswer).length)\r\n        return arr\r\n\r\n\r\n        function setSpan(user, check) {\r\n            let arr = []\r\n            let includeUserAns = check.includes(user)\r\n\r\n            if (typeof check === 'object' && typeof user === 'string' && includeUserAns) {\r\n                ++countTrueAnswer\r\n                arr = [<span className={ResolCSS.comments + ' ' + ResolCSS.true}>{'// верно'}</span>, true]\r\n                // eslint-disable-next-line eqeqeq\r\n            } else if (check == user) {\r\n                ++countTrueAnswer\r\n                arr = [<span className={ResolCSS.comments + ' ' + ResolCSS.true}>{'// верно'}</span>, true]\r\n            } else if (typeof check === 'object' && typeof user === 'object') {\r\n\r\n                let num = 0\r\n                for (let elem of check) {\r\n                    if (user.includes(elem)) num += 1\r\n                }\r\n                if (num === check.length) {\r\n                    ++countTrueAnswer\r\n                    arr = [<span className={ResolCSS.comments + ' ' + ResolCSS.true}>{'// верно'}</span>, true]\r\n                } else {\r\n                    arr = [<span className={ResolCSS.comments + ' ' + ResolCSS.false}>{'// неверно'}</span>, false]\r\n                }\r\n\r\n            } else {\r\n                arr = [<span className={ResolCSS.comments + ' ' + ResolCSS.false}>{'// неверно'}</span>, false]\r\n            }\r\n\r\n            return arr\r\n        }\r\n\r\n\r\n        function setDivTrueAns(spanBool, check) {\r\n            if (spanBool === false) {\r\n\r\n                return typeof check === 'string' ?\r\n                    <div className={ResolCSS.comments}>Верный ответ: {check}</div>\r\n                    :\r\n                    <div className={ResolCSS.comments}>Верный ответ: {check.join(', ')}</div>\r\n            }\r\n        }\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
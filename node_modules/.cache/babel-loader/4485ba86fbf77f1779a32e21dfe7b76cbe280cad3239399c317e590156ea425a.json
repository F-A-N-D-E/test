{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\ResolutionCheck.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResolutionCheck() {\n  _s();\n  let [data, setData] = useState();\n  async function getData() {\n    let paramId = window.location.pathname.split('/')[2];\n    let data = await fetch(`/resolution/${paramId}/check`).then(r => r.json()).then(r => r);\n    setData(data);\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(data);\n  function render() {\n    let userAnswer = data.userAnswer;\n    let checkAnswer = data.checkAnswer;\n    let arr = [];\n    let count = 0;\n    for (let key in userAnswer) {\n      console.log(checkAnswer[key], 'checkAnswer[key]');\n      if (checkAnswer[key].find(elem => elem === userAnswer[key])) {\n        arr.push(/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: ResolCSS.resP,\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0412\\u0430\\u0448 \\u043E\\u0442\\u0432\\u0435\\u0442: \", userAnswer[key], /*#__PURE__*/_jsxDEV(\"span\", {\n              className: ResolCSS.comments,\n              children: \" // \\u0432\\u0435\\u0440\\u043D\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true));\n      }\n\n      /* arr.push(<>\r\n          <p className={ResolCSS.resP}>{key}</p>\r\n            <p>Ваш ответ: {userAnswer[key]}<span className={ResolCSS.comments}></span></p>\r\n      </>) */\n    }\n\n    // console.log(checkAnswer, 'checkAnswer')\n    // console.log(userAnswer, 'userAnswer')\n    return arr;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: ResolCSS.resH3,\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), render().map((elem, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ResolCSS.res,\n          children: elem\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ResolutionCheck, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = ResolutionCheck;\nvar _c;\n$RefreshReg$(_c, \"ResolutionCheck\");","map":{"version":3,"names":["React","useEffect","useState","ResolCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","ResolutionCheck","_s","data","setData","getData","paramId","window","location","pathname","split","fetch","then","r","json","console","log","render","userAnswer","checkAnswer","arr","count","key","find","elem","push","children","className","resP","fileName","_jsxFileName","lineNumber","columnNumber","comments","resH3","name","map","index","res","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/ResolutionCheck.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nexport default function ResolutionCheck() {\r\n    let [data, setData] = useState()\r\n\r\n    async function getData() {\r\n        let paramId = window.location.pathname.split('/')[2]\r\n\r\n        let data = await fetch(`/resolution/${paramId}/check`).then(r => r.json()).then(r => r)\r\n        setData(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    console.log(data)\r\n\r\n    function render() {\r\n        let userAnswer = data.userAnswer\r\n        let checkAnswer = data.checkAnswer\r\n\r\n\r\n        let arr = []\r\n\r\n\r\n        let count = 0\r\n\r\n        for (let key in userAnswer) {\r\n\r\n            console.log(checkAnswer[key], 'checkAnswer[key]')\r\n\r\n            if (checkAnswer[key].find(elem => elem === userAnswer[key])) {\r\n                arr.push(<>\r\n                    <p className={ResolCSS.resP}>{key}</p>\r\n\r\n                    <p>Ваш ответ: {userAnswer[key]}<span className={ResolCSS.comments}> // верно</span></p>\r\n                </>)\r\n            }\r\n\r\n            /* arr.push(<>\r\n                <p className={ResolCSS.resP}>{key}</p>\r\n\r\n                <p>Ваш ответ: {userAnswer[key]}<span className={ResolCSS.comments}></span></p>\r\n            </>) */\r\n        }\r\n\r\n        // console.log(checkAnswer, 'checkAnswer')\r\n        // console.log(userAnswer, 'userAnswer')\r\n        return arr\r\n    }\r\n\r\n    return <>\r\n        {data ? <>\r\n            <h3 className={ResolCSS.resH3}>{data.name}</h3>\r\n            {render().map((elem, index) => {\r\n                return <div key={index} className={ResolCSS.res}>{elem}</div>\r\n            })}\r\n\r\n            {/* <div className={ResolCSS.res}>\r\n\r\n                <p className={ResolCSS.resP}>Вопрос</p>\r\n                <p>Ваш ответ: ваываываываы<span className={ResolCSS.comments}> // верно</span></p>\r\n\r\n            </div>\r\n\r\n            <div className={ResolCSS.res}>\r\n\r\n                <p className={ResolCSS.resP}>Вопрос</p>\r\n                <p>Ваш ответ: ваываываываы <span className={ResolCSS.comments}>// неверно</span></p>\r\n                <p className={ResolCSS.comments}>// верно: \"этот ответ\"</p>\r\n\r\n            </div> */}\r\n        </>\r\n            :\r\n            <div>load</div>\r\n        }\r\n    </>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
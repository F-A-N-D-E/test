{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\ResolutionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport Resolution from \"./Resolution\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResolutionForm() {\n  _s();\n  let [data, setData] = useState([]);\n  const getTest = async () => {\n    let paramId = window.location.pathname.split('/')[2];\n    let dataProcess = {};\n    let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data);\n    let tempArr = [];\n    for (let key in dataFromServer) {\n      if ((+key[0] || +key[0] === 0) && !key.split('_')[1].startsWith('answer')) {\n        dataProcess[+key[0]] = {\n          ...dataProcess[+key[0]],\n          [key.slice(2)]: dataFromServer[key]\n        };\n      } else if (key.split('_')[0] === 'nameTest') {\n        dataProcess.info = dataFromServer[key];\n      } else if (key.split('_')[1].startsWith('answer') && key.split('_')[0] !== 'id') {\n        // console.log(key.split('_')[0])\n        dataProcess[+key[0]].answer = {\n          ...dataProcess[+key[0]].answer,\n          [key]: dataFromServer[key]\n        };\n      }\n    }\n    for (let key in dataProcess) {\n      if (dataProcess[key].answer) {\n        dataProcess[key].answer = Object.values(dataProcess[key].answer);\n      }\n    }\n    setData(Object.values(dataProcess));\n  }; // переделать эту операцию на сервер\n\n  useEffect(() => {\n    getTest();\n  }, []);\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ResolCSS.btnAdd,\n        type: \"submit\",\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n}\n_s(ResolutionForm, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ResolutionForm;\nvar _c;\n$RefreshReg$(_c, \"ResolutionForm\");","map":{"version":3,"names":["React","useEffect","useState","ResolCSS","Resolution","jsxDEV","_jsxDEV","Fragment","_Fragment","ResolutionForm","_s","data","setData","getTest","paramId","window","location","pathname","split","dataProcess","dataFromServer","fetch","then","res","json","r","tempArr","key","startsWith","slice","info","answer","Object","values","method","children","className","btnAdd","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/ResolutionForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nimport Resolution from \"./Resolution\";\r\n\r\nexport default function ResolutionForm() {\r\n    let [data, setData] = useState([])\r\n\r\n    const getTest = async () => {\r\n        let paramId = window.location.pathname.split('/')[2]\r\n        let dataProcess = {}\r\n        let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data)\r\n\r\n        let tempArr = []\r\n        for (let key in dataFromServer) {\r\n            if ((+key[0] || +key[0] === 0) && !key.split('_')[1].startsWith('answer')) {\r\n                dataProcess[+key[0]] = {\r\n                    ...dataProcess[+key[0]],\r\n                    [key.slice(2)]: dataFromServer[key]\r\n                }\r\n\r\n            } else if (key.split('_')[0] === 'nameTest') {\r\n                dataProcess.info = dataFromServer[key]\r\n\r\n            } else if (key.split('_')[1].startsWith('answer') && key.split('_')[0] !== 'id') {\r\n                // console.log(key.split('_')[0])\r\n                dataProcess[+key[0]].answer = {\r\n                    ...dataProcess[+key[0]].answer,\r\n                    [key]: dataFromServer[key]\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in dataProcess) {\r\n            if (dataProcess[key].answer) {\r\n                dataProcess[key].answer = Object.values(dataProcess[key].answer)\r\n            }\r\n        }\r\n\r\n        setData(Object.values(dataProcess))\r\n    } // переделать эту операцию на сервер\r\n\r\n    useEffect(() => {\r\n        getTest()\r\n    }, [])\r\n    // console.log(data)\r\n\r\n    return <form method=\"post\">\r\n        {data ? <>\r\n            {/* <h3>{}</h3> */}\r\n\r\n\r\n\r\n            <button className={ResolCSS.btnAdd} type=\"submit\">Завершить</button>\r\n        </>\r\n            : <div>Загрузка</div>}\r\n    </form>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
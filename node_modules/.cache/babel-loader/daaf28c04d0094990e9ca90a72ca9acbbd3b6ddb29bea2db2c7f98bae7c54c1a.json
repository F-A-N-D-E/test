{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\FormCreate\\\\QUEForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { useParams } from \"react-router-dom\";\nimport FormCSS from '../styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QUEForm({\n  elemFromState,\n  number,\n  remove,\n  last,\n  add,\n  mainList,\n  mainSetList\n}) {\n  _s();\n  let {\n    idTest\n  } = useParams();\n  console.log(idTest);\n  let num = number + '_';\n  function setAnswers() {\n    // отоброжение по типу ответа\n    if (elemFromState.type === 'radio') {\n      // radio btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), mapList('answerTrue'), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    } else if (elemFromState.type === 'text') {\n      // text btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: FormCSS.pInTextType,\n            children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0433\\u043E \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), mapList('answerTrue')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), lastBtn('answerTrue')]\n      }, void 0, true);\n    } else if (elemFromState.type === 'checkbox') {\n      // checkbox\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), mapList('answerTrue'), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.margin_bottom,\n            onClick: () => btnAddAns('answerTrue'),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    }\n  } // /отоброжение по типу ответа\n\n  function lastBtn(bool) {\n    // сокращенка для последней кнопки 'завершить', \"добавить вопрос\", 'удалить вопрос', \"добавить\"\n    if (last) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            onClick: () => add(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: number === 0 ? 'reset' : 'button',\n            className: FormCSS.removeAnsBtn,\n            onClick: number !== 0 || mainList.length > 1 ? () => remove(elemFromState.id) : undefined,\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: number === 0 ? 'reset' : 'button',\n          className: FormCSS.removeAnsBtn,\n          onClick: number !== 0 || mainList.length > 1 ? () => remove(elemFromState.id) : undefined,\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    }\n  } // /сокращенка для последней кнопки 'завершить', \"добавить вопрос\", 'удалить вопрос', \"добавить\"\n\n  function btnAddAns(bool) {\n    // кнопка добавления ответа\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    if (bool === 'answerTrue') {\n      elemFromState.answerTrue = [...elemFromState.answerTrue, [nanoid(3), '']];\n    } else {\n      elemFromState.answerFalse = [...elemFromState.answerFalse, [nanoid(3), '']];\n    }\n    copy[indexMainStait] = elemFromState;\n    mainSetList(copy);\n    localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  } // /кнопка добавления ответа\n\n  function setTextAnsw(e, bool, id) {\n    // реактивная замена ответа в стейте\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id);\n    copy[indexMainStait][bool][indexAnswerInMainState][1] = e.target.value;\n    mainSetList(copy);\n    localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  } // /реактивная замена ответа в стейте\n\n  function btnRemoveAns(id, bool) {\n    // кнопка удаления ответа из стейта\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id);\n    copy[indexMainStait][bool].splice(indexAnswerInMainState, 1);\n    mainSetList(copy);\n    localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  } // /кнопка удаления ответа из стейта\n\n  function mapList(bool) {\n    // сокращенка для вывода списка ответа\n\n    let res = elemFromState[bool].map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: num + bool,\n          value: elem[1],\n          onChange: e => setTextAnsw(e, bool, elem[0]),\n          className: FormCSS.answer,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + bool,\n            value: elem[1],\n            onChange: e => setTextAnsw(e, bool, elem[0]),\n            className: FormCSS.answer,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.removeAnsBtn,\n            onClick: () => btnRemoveAns(elem[0], bool),\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }, this);\n    });\n    return res;\n  } // /сокращенка для вывода списка ответа\n\n  function switchTypeAnswer(type) {\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    copy[indexMainStait].type = type;\n    copy[indexMainStait].answerTrue = [[nanoid(3), '']];\n    copy[indexMainStait].answerFalse = [[nanoid(3), '']];\n    mainSetList(copy);\n    localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  }\n  function ChangeTextQue(e) {\n    let copy = [...mainList];\n    let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id);\n    copy[indexMainStait].text = e.target.value;\n    mainSetList(copy);\n    localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: FormCSS.blockQUE,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: FormCSS.textarea,\n      name: num + \"textQUE\",\n      value: elemFromState.text,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\",\n      onChange: e => ChangeTextQue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: FormCSS.type,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: FormCSS.type_para,\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"radio\",\n          onClick: () => switchTypeAnswer('radio'),\n          defaultChecked: elemFromState.type === 'radio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 20\n        }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"text\",\n          onClick: () => switchTypeAnswer('text'),\n          defaultChecked: elemFromState.type === 'text'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 20\n        }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"checkbox\",\n          onClick: () => switchTypeAnswer('checkbox'),\n          defaultChecked: elemFromState.type === 'checkbox'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 20\n        }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), setAnswers()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 13\n  }, this);\n}\n_s(QUEForm, \"8Wvn1598x9LIxfJY+B5Pjc27g9o=\", false, function () {\n  return [useParams];\n});\n_c = QUEForm;\nvar _c;\n$RefreshReg$(_c, \"QUEForm\");","map":{"version":3,"names":["React","nanoid","useParams","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","QUEForm","elemFromState","number","remove","last","add","mainList","mainSetList","_s","idTest","console","log","num","setAnswers","type","children","className","answer_block","fileName","_jsxFileName","lineNumber","columnNumber","mapList","lastBtn","pInTextType","btnAdd","margin_bottom","onClick","btnAddAns","bool","lastBlock","removeAnsBtn","length","id","undefined","copy","indexMainStait","findIndex","elem","answerTrue","answerFalse","localStorage","setItem","JSON","stringify","setTextAnsw","e","indexAnswerInMainState","target","value","btnRemoveAns","splice","res","map","index","name","onChange","answer","autoComplete","switchTypeAnswer","ChangeTextQue","text","blockQUE","textarea","placeholder","type_para","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/FormCreate/QUEForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport FormCSS from '../styles/Form.module.css'\r\n\r\nexport default function QUEForm({ elemFromState, number, remove, last, add, mainList, mainSetList }) {\r\n    let { idTest } = useParams()\r\n    console.log(idTest)\r\n    let num = number + '_'\r\n\r\n    function setAnswers() { // отоброжение по типу ответа\r\n        if (elemFromState.type === 'radio') { // radio btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    {mapList('answerTrue')}\r\n\r\n                    <p>Неверный: </p>\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n\r\n\r\n        } else if (elemFromState.type === 'text') { // text btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p className={FormCSS.pInTextType}>Вариант возможного написания правильного ответа: </p>\r\n                    {mapList('answerTrue')}\r\n                </div>\r\n\r\n                {lastBtn('answerTrue')}\r\n            </>)\r\n\r\n\r\n        } else if (elemFromState.type === 'checkbox') { // checkbox\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    {mapList('answerTrue')}\r\n\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.margin_bottom} onClick={() => btnAddAns('answerTrue')}>Добавить</button>\r\n\r\n                    <p>Неверный ответ: </p>\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n        }\r\n    } // /отоброжение по типу ответа\r\n\r\n    function lastBtn(bool) { // сокращенка для последней кнопки 'завершить', \"добавить вопрос\", 'удалить вопрос', \"добавить\"\r\n        if (last) {\r\n            return <div className={FormCSS.lastBlock}>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n\r\n                <div>\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => add()}>Добавить вопрос</button>\r\n\r\n                    <button type={number === 0 ? 'reset' : 'button'} className={FormCSS.removeAnsBtn} onClick={(number !== 0 || mainList.length > 1) ? () => remove(elemFromState.id) : undefined}>удалить вопрос</button>\r\n\r\n                    <button type=\"submit\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} >Завершить</button>\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className={FormCSS.lastBlock}>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n\r\n                <button type={number === 0 ? 'reset' : 'button'} className={FormCSS.removeAnsBtn} onClick={(number !== 0 || mainList.length > 1) ? () => remove(elemFromState.id) : undefined}>удалить вопрос</button>\r\n\r\n            </div>\r\n        }\r\n    }// /сокращенка для последней кнопки 'завершить', \"добавить вопрос\", 'удалить вопрос', \"добавить\"\r\n\r\n    function btnAddAns(bool) { // кнопка добавления ответа\r\n        let copy = [...mainList]\r\n\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        if (bool === 'answerTrue') {\r\n            elemFromState.answerTrue = [...elemFromState.answerTrue,\r\n            [nanoid(3), '']\r\n            ]\r\n        } else {\r\n            elemFromState.answerFalse = [...elemFromState.answerFalse,\r\n            [nanoid(3), '']\r\n            ]\r\n        }\r\n\r\n        copy[indexMainStait] = elemFromState\r\n        mainSetList(copy)\r\n        localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }// /кнопка добавления ответа\r\n\r\n    function setTextAnsw(e, bool, id) { // реактивная замена ответа в стейте\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n        let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id)\r\n\r\n        copy[indexMainStait][bool][indexAnswerInMainState][1] = e.target.value\r\n\r\n        mainSetList(copy)\r\n        localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    } // /реактивная замена ответа в стейте\r\n\r\n    function btnRemoveAns(id, bool) { // кнопка удаления ответа из стейта\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n        let indexAnswerInMainState = copy[indexMainStait][bool].findIndex(elem => elem[0] === id)\r\n\r\n        copy[indexMainStait][bool].splice(indexAnswerInMainState, 1)\r\n\r\n        mainSetList(copy)\r\n        localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }// /кнопка удаления ответа из стейта\r\n\r\n    function mapList(bool) { // сокращенка для вывода списка ответа\r\n\r\n        let res = elemFromState[bool].map((elem, index) => {\r\n            return <div key={index}>\r\n                {index === 0 ?\r\n                    <input type='text' name={num + bool} value={elem[1]} onChange={(e) => setTextAnsw(e, bool, elem[0])} className={FormCSS.answer} autoComplete=\"off\" />\r\n\r\n                    :\r\n\r\n                    <>\r\n                        <input type='text' name={num + bool} value={elem[1]} onChange={(e) => setTextAnsw(e, bool, elem[0])} className={FormCSS.answer} autoComplete=\"off\" />\r\n\r\n                        <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem[0], bool)}>удалить</button>\r\n                        <br />\r\n                    </>\r\n                }\r\n            </div>\r\n        })\r\n        return res\r\n    }// /сокращенка для вывода списка ответа\r\n\r\n\r\n\r\n\r\n    function switchTypeAnswer(type) {\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        copy[indexMainStait].type = type\r\n        copy[indexMainStait].answerTrue = [\r\n            [nanoid(3), '']\r\n        ]\r\n        copy[indexMainStait].answerFalse = [\r\n            [nanoid(3), '']\r\n        ]\r\n\r\n        mainSetList(copy)\r\n        localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }\r\n\r\n    function ChangeTextQue(e) {\r\n        let copy = [...mainList]\r\n        let indexMainStait = copy.findIndex(elem => elem.id === elemFromState.id)\r\n\r\n        copy[indexMainStait].text = e.target.value\r\n        mainSetList(copy)\r\n        localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }\r\n\r\n    return (<div className={FormCSS.blockQUE}>\r\n        <textarea className={FormCSS.textarea} name={num + \"textQUE\"} value={elemFromState.text} placeholder=\"Введите текст вопроса\" onChange={e => ChangeTextQue(e)} ></textarea>\r\n\r\n        <div className={FormCSS.type}>\r\n            <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n\r\n            <label><input type=\"radio\" name={num + \"type\"} value='radio' onClick={() => switchTypeAnswer('radio')} defaultChecked={elemFromState.type === 'radio'} />Один вариант</label>\r\n\r\n            <label><input type=\"radio\" name={num + \"type\"} value='text' onClick={() => switchTypeAnswer('text')} defaultChecked={elemFromState.type === 'text'} />Текст</label>\r\n\r\n            <label><input type=\"radio\" name={num + \"type\"} value='checkbox' onClick={() => switchTypeAnswer('checkbox')} defaultChecked={elemFromState.type === 'checkbox'} />Выбрать несколько</label>\r\n        </div>\r\n        {setAnswers()}\r\n    </div>)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
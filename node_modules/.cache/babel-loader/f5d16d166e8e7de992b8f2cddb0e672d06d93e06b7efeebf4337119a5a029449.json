{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\FormCreate\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { nanoid } from 'nanoid';\nimport FormCSS from '../styles/Form.module.css';\nimport QUEForm from \"./QUEForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const refNullInput = useRef(null);\n  function stopSend() {\n    let x = refNullInput.current;\n    if (x.value.length === 0) {\n      x.classList.toggle();\n    }\n    return false;\n  }\n  const [list, setList] = useState([{\n    id: nanoid(5),\n    type: 'radio',\n    text: '',\n    answerTrue: [[nanoid(3), '']],\n    answerFalse: [[nanoid(3), '']]\n  }]);\n  /* const [list, setList] = useState({\r\n      id: qwe,\r\n      type: 'type',\r\n      text: 'qwe',\r\n      answerTrue: [],\r\n      answerFalse: [],\r\n  }) */\n\n  function add() {\n    let copy = [...list];\n    copy = [...copy, {\n      id: nanoid(5),\n      type: 'radio',\n      text: '',\n      answerTrue: [[nanoid(3), '']],\n      answerFalse: [[nanoid(3), '']]\n    }];\n    setList(copy);\n  }\n  function remove(id) {\n    let copy = [...list];\n    let index = copy.findIndex(elem => elem.id === id);\n    copy.splice(index, 1);\n    setList(copy);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onKeyDown: e => {\n        if (e.key === 'Enter') e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: FormCSS.none,\n        readOnly: true,\n        type: \"text\",\n        name: \"id\",\n        value: nanoid(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nameTest\",\n        className: FormCSS.inp_name,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), list.map((elem, index) => {\n        return /*#__PURE__*/_jsxDEV(QUEForm, {\n          elemFromState: elem,\n          number: index,\n          remove: remove,\n          last: index === list.length - 1 ? true : false,\n          add: add,\n          mainList: list,\n          mainSetList: setList,\n          refNullInput: refNullInput\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Form, \"nk00hhmRth04wTmCnGYudDEPctg=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useRef","nanoid","FormCSS","QUEForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","refNullInput","stopSend","x","current","value","length","classList","toggle","list","setList","id","type","text","answerTrue","answerFalse","add","copy","remove","index","findIndex","elem","splice","children","method","onKeyDown","e","key","preventDefault","className","none","readOnly","name","fileName","_jsxFileName","lineNumber","columnNumber","inp_name","placeholder","map","elemFromState","number","last","mainList","mainSetList","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/FormCreate/Form.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport FormCSS from '../styles/Form.module.css'\r\nimport QUEForm from \"./QUEForm\";\r\n\r\nexport default function Form() {\r\n    const refNullInput = useRef(null)\r\n\r\n    function stopSend() {\r\n        let x = refNullInput.current\r\n\r\n        if (x.value.length === 0) {\r\n            x.classList.toggle()\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n\r\n\r\n    const [list, setList] = useState([\r\n        {\r\n            id: nanoid(5),\r\n            type: 'radio',\r\n            text: '',\r\n            answerTrue: [\r\n                [nanoid(3), '']\r\n            ],\r\n            answerFalse: [\r\n                [nanoid(3), '']\r\n            ],\r\n        }\r\n    ])\r\n    /* const [list, setList] = useState({\r\n        id: qwe,\r\n        type: 'type',\r\n        text: 'qwe',\r\n        answerTrue: [],\r\n        answerFalse: [],\r\n    }) */\r\n\r\n    function add() {\r\n        let copy = [...list]\r\n\r\n        copy = [...copy,\r\n        {\r\n            id: nanoid(5),\r\n            type: 'radio',\r\n            text: '',\r\n            answerTrue: [\r\n                [nanoid(3), '']\r\n            ],\r\n            answerFalse: [\r\n                [nanoid(3), '']\r\n            ],\r\n        }\r\n        ]\r\n        setList(copy)\r\n    }\r\n    function remove(id) {\r\n        let copy = [...list]\r\n        let index = copy.findIndex(elem => elem.id === id)\r\n\r\n        copy.splice(index, 1)\r\n        setList(copy)\r\n    }\r\n\r\n    return (<>\r\n        <form method=\"post\" onKeyDown={(e) => {\r\n            if (e.key === 'Enter') e.preventDefault()\r\n        }}>\r\n            <input className={FormCSS.none} readOnly type=\"text\" name=\"id\" value={nanoid(6)} /> {/* display: none. Ставит айдишник данным для БД */}\r\n\r\n\r\n            <input type=\"text\" name=\"nameTest\" className={FormCSS.inp_name} placeholder=\"Введите название теста\" />\r\n\r\n            {list.map((elem, index) => {\r\n                return <QUEForm\r\n                    key={index}\r\n                    elemFromState={elem}\r\n                    number={index}\r\n                    remove={remove}\r\n                    last={index === list.length - 1 ? true : false}\r\n                    add={add}\r\n\r\n                    mainList={list}\r\n                    mainSetList={setList}\r\n                    refNullInput={refNullInput}\r\n                />\r\n            })}\r\n        </form>\r\n    </>)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
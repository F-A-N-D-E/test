{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\resolution\\\\ResolutionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ResolCSS from '../styles/Resolution.module.css';\nimport Resolution from \"./Resolution\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResolutionForm() {\n  _s();\n  let [data, setData] = useState([]);\n  let [paramId, setParamId] = useState();\n  const getTest = async () => {\n    let paramId = window.location.pathname.split('/')[2];\n    setParamId(paramId);\n    let dataProcess = {};\n    let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data); /* \r\n                                                                                                          {\r\n                                                                                                          0_answerFalse: ['1234', '1111', '22222']\r\n                                                                                                          0_answerTrue: \"qwer\"\r\n                                                                                                          0_textQUE: \"text\"\r\n                                                                                                          0_type: \"checkbox\"\r\n                                                                                                          1_answerTrue: ['2222', '222', '22', '2']\r\n                                                                                                          1_textQUE: \"sdasdasdasd\"\r\n                                                                                                          1_type: \"text\"\r\n                                                                                                          2_answerFalse: (3) ['qqq', 'qwe', 'ewq']\r\n                                                                                                          2_answerTrue: \"wwwwwwwwww\"\r\n                                                                                                          2_textQUE: \"31231231\"\r\n                                                                                                          2_type: \"radio\"\r\n                                                                                                          id: \"ASjsxA\"\r\n                                                                                                          nameTest: \"1\"\r\n                                                                                                          }  dataFromServer\r\n                                                                                                          */\n\n    for (let key in dataFromServer) {\n      let split = key.split('_');\n      if ((+key[0] || +key[0] === 0) && !split[1].startsWith('answer')) {\n        dataProcess[+key[0]] = {\n          ...dataProcess[+key[0]],\n          [key.slice(2)]: dataFromServer[key]\n        };\n      } else if (split[0] === 'nameTest') {\n        dataProcess.info = dataFromServer[key];\n      } else if (split[1]) {\n        let valFalse = dataFromServer[split[0] + '_answerFalse'];\n        let valTrue = dataFromServer[split[0] + '_answerTrue'];\n        if (typeof valTrue === 'object' && typeof valFalse === 'object') {\n          dataProcess[+key[0]].answer = [...valFalse, ...valTrue];\n        } else if (typeof valTrue === 'object' && typeof valFalse === 'string') {\n          dataProcess[+key[0]].answer = [...valTrue, valFalse];\n        } else if (typeof valTrue === 'string' && typeof valFalse === 'object') {\n          dataProcess[+key[0]].answer = [...valFalse, valTrue];\n        } else if (!valTrue) {\n          dataProcess[+key[0]].answer = [valFalse];\n        } else if (!valFalse) {\n          dataProcess[+key[0]].answer = [valTrue];\n        }\n      }\n    }\n    dataProcess = Object.values(dataProcess);\n    setData(dataProcess);\n  }; // переделать эту операцию на сервер\n\n  useEffect(() => {\n    getTest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        action: `/resolution/${paramId}/check`,\n        children: [data.map((elem, index) => {\n          if (typeof elem !== 'object') {\n            return /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: ResolCSS.resH3,\n              children: elem\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 32\n            }, this);\n          }\n        }), data.map((elem, index) => {\n          if (typeof elem === 'object') {\n            return /*#__PURE__*/_jsxDEV(Resolution, {\n              data: elem,\n              num: index\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 32\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: ResolCSS.btnAdd,\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n_s(ResolutionForm, \"eWCw6GQwQVIg/oIhKYsSEgVeiGY=\");\n_c = ResolutionForm;\nvar _c;\n$RefreshReg$(_c, \"ResolutionForm\");","map":{"version":3,"names":["React","useEffect","useState","ResolCSS","Resolution","jsxDEV","_jsxDEV","Fragment","_Fragment","ResolutionForm","_s","data","setData","paramId","setParamId","getTest","window","location","pathname","split","dataProcess","dataFromServer","fetch","then","res","json","r","key","startsWith","slice","info","valFalse","valTrue","answer","Object","values","children","method","action","map","elem","index","className","resH3","fileName","_jsxFileName","lineNumber","columnNumber","num","btnAdd","type","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/resolution/ResolutionForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ResolCSS from '../styles/Resolution.module.css'\r\n\r\nimport Resolution from \"./Resolution\";\r\n\r\nexport default function ResolutionForm() {\r\n    let [data, setData] = useState([])\r\n    let [paramId, setParamId] = useState()\r\n\r\n    const getTest = async () => {\r\n        let paramId = window.location.pathname.split('/')[2]\r\n        setParamId(paramId)\r\n        let dataProcess = {}\r\n        let dataFromServer = await fetch(`/resolution/${paramId}`).then(res => res.json()).then(r => r.data) /* \r\n        {\r\n            0_answerFalse: ['1234', '1111', '22222']\r\n            0_answerTrue: \"qwer\"\r\n            0_textQUE: \"text\"\r\n            0_type: \"checkbox\"\r\n            1_answerTrue: ['2222', '222', '22', '2']\r\n            1_textQUE: \"sdasdasdasd\"\r\n            1_type: \"text\"\r\n            2_answerFalse: (3) ['qqq', 'qwe', 'ewq']\r\n            2_answerTrue: \"wwwwwwwwww\"\r\n            2_textQUE: \"31231231\"\r\n            2_type: \"radio\"\r\n            id: \"ASjsxA\"\r\n            nameTest: \"1\"\r\n        }  dataFromServer\r\n        */\r\n\r\n        for (let key in dataFromServer) {\r\n            let split = key.split('_')\r\n\r\n            if ((+key[0] || +key[0] === 0) && !split[1].startsWith('answer')) {\r\n                dataProcess[+key[0]] = {\r\n                    ...dataProcess[+key[0]],\r\n                    [key.slice(2)]: dataFromServer[key]\r\n                }\r\n\r\n            } else if (split[0] === 'nameTest') {\r\n                dataProcess.info = dataFromServer[key]\r\n\r\n            } else if (split[1]) {\r\n                let valFalse = dataFromServer[split[0] + '_answerFalse']\r\n                let valTrue = dataFromServer[split[0] + '_answerTrue']\r\n\r\n                if (typeof valTrue === 'object' && typeof valFalse === 'object') {\r\n                    dataProcess[+key[0]].answer = [...valFalse, ...valTrue]\r\n                } else if (typeof valTrue === 'object' && typeof valFalse === 'string') {\r\n                    dataProcess[+key[0]].answer = [...valTrue, valFalse]\r\n                } else if (typeof valTrue === 'string' && typeof valFalse === 'object') {\r\n                    dataProcess[+key[0]].answer = [...valFalse, valTrue]\r\n                } else if (!valTrue) {\r\n                    dataProcess[+key[0]].answer = [valFalse]\r\n                } else if (!valFalse) {\r\n                    dataProcess[+key[0]].answer = [valTrue]\r\n                }\r\n            }\r\n        }\r\n\r\n        dataProcess = Object.values(dataProcess)\r\n        setData(dataProcess)\r\n    } // переделать эту операцию на сервер\r\n\r\n    useEffect(() => {\r\n        getTest()\r\n    }, [])\r\n\r\n    return <>\r\n        {data ? <>\r\n            <form method=\"post\" action={`/resolution/${paramId}/check`}>\r\n\r\n                {data.map((elem, index) => {\r\n                    if (typeof elem !== 'object') {\r\n                        return <h3 className={ResolCSS.resH3} key={index}>{elem}</h3>\r\n                    }\r\n                })}\r\n\r\n                {data.map((elem, index) => {\r\n                    if (typeof elem === 'object') {\r\n                        return <Resolution key={index} data={elem} num={index} />\r\n                    }\r\n                })}\r\n\r\n\r\n\r\n                <button className={ResolCSS.btnAdd} type=\"submit\">Завершить</button>\r\n            </form>\r\n\r\n        </>\r\n            : <div>Загрузка</div>}\r\n    </>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
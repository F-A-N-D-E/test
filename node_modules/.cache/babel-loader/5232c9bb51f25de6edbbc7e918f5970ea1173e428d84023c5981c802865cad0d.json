{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport FormCSS from './styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [stateType, setStateType] = useState('radio');\n  const [listAnswer, setListAnswer] = useState([]);\n  /* \r\n      {\r\n      id,\r\n      +name,\r\n  }*/\n\n  function setAnswers() {\n    if (stateType === 'radio') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answerTrue\",\n              className: FormCSS.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 116\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answerFalse\",\n              className: FormCSS.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 113\n          }, this), listAnswer.map(elem => {\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: 'answer' + elem.name,\n              className: FormCSS.answer\n            }, elem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 32\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns('radio', 'False'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  // как добавлять варианты через стейт, не задевая другие вопросы и не создавать другие стейты\n\n  function btnAddAns(type, boll) {\n    let copy = Object.assign([], listAnswer);\n    let obj = {\n      id: 1,\n      name: boll\n    };\n    setListAnswer([...listAnswer, obj]);\n    console.log(listAnswer);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: FormCSS.textarea,\n        name: \"textQUE\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.type,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: FormCSS.type_para,\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"radio\",\n            onClick: () => setStateType('radio'),\n            defaultChecked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"text\",\n            onClick: () => setStateType('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 24\n          }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: \"checkbox\",\n            onClick: () => setStateType('checkbox')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), setAnswers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n// тип ответа формировать на сервере\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */\n_s(Form, \"0G2HmnURdRxwe9qyTQ+H741VNCw=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useRef","useState","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","stateType","setStateType","listAnswer","setListAnswer","setAnswers","children","type","name","className","answer","fileName","_jsxFileName","lineNumber","columnNumber","map","elem","id","btnAdd","onClick","btnAddAns","boll","copy","Object","assign","obj","console","log","action","method","textarea","placeholder","type_para","value","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/Form.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nimport FormCSS from './styles/Form.module.css'\r\n\r\nexport default function Form() {\r\n    const [stateType, setStateType] = useState('radio')\r\n\r\n    const [listAnswer, setListAnswer] = useState([])\r\n    /* \r\n        {\r\n        id,\r\n        +name,\r\n    }*/\r\n\r\n    function setAnswers() {\r\n        if (stateType === 'radio') {\r\n            return (<>\r\n                <div>\r\n                    <label>Верный ответ: <input type=\"text\" name=\"answerTrue\" className={FormCSS.answer} /></label><br />\r\n                    <label>Неверный: <input type=\"text\" name=\"answerFalse\" className={FormCSS.answer} /></label><br />\r\n\r\n                    {listAnswer.map(elem => {\r\n                        return <input key={elem.id} type='text' name={'answer' + elem.name} className={FormCSS.answer} />\r\n                    })}\r\n                </div>\r\n\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns('radio', 'False')}>Добавить неверный</button>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    // как добавлять варианты через стейт, не задевая другие вопросы и не создавать другие стейты\r\n\r\n    function btnAddAns(type, boll) {\r\n        let copy = Object.assign([], listAnswer)\r\n\r\n        let obj = {\r\n            id: 1,\r\n            name: boll\r\n        }\r\n        setListAnswer([...listAnswer, obj])\r\n        console.log(listAnswer)\r\n    }\r\n\r\n    return (<>\r\n        <form action=\"\" method=\"post\">\r\n            <textarea className={FormCSS.textarea} name=\"textQUE\" placeholder=\"Введите текст вопроса\"></textarea>\r\n\r\n            <div className={FormCSS.type}>\r\n                <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n                <label><input type=\"radio\" name=\"type\" value='radio' onClick={() => setStateType('radio')} defaultChecked />Один вариант</label>\r\n                <label><input type=\"radio\" name=\"type\" value='text' onClick={() => setStateType('text')} />Текст</label>\r\n                <label><input type=\"radio\" name=\"type\" value='checkbox' onClick={() => setStateType('checkbox')} />Выбрать несколько</label>\r\n            </div>\r\n            {setAnswers()}\r\n        </form>\r\n    </>)\r\n}\r\n// тип ответа формировать на сервере\r\n/* value='radio'\r\nvalue='text'\r\nvalue='checkbox' */\r\n/* function setTypeRadio() {\r\n        return setState(<>\r\n            <input type=\"radio\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeInput() {\r\n        return setState(<>\r\n            <input type=\"text\" name=\"answer\" />\r\n        </>)\r\n    }\r\n    function setTypeBox() {\r\n        return setState(<>\r\n            <input type=\"checkbox\" name=\"answer\" />\r\n        </>)\r\n    } */\r\n/* onClick={setTypeRadio}\r\nonClick={setTypeInput}\r\nonClick={setTypeBox} */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
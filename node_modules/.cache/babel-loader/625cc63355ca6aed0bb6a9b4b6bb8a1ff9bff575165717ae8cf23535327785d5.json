{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\Form\\\\QUEForm.jsx\";\nimport React, { useState } from \"react\";\nimport FormCSS from '../styles/Form.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QUEForm({\n  elemFromState,\n  number,\n  remove,\n  last,\n  add\n}) {\n  /* \r\n      key={index}\r\n      id={elem}\r\n      number={index}\r\n      remove={remove}\r\n      last={index === list.length - 1 ? true : false}\r\n      add={add}\r\n  */\n\n  let num = number + '_';\n\n  // const [stateType, setStateType] = useState('radio') // стейт для смены типа ответа\n\n  // const [listTrueAnswer, setListTrueAnswer] = useState([]) // стейт верных ответов\n  // const [stateTrueId, setStateTrueId] = useState(2) // счетчик айдишников для стейта верных ответов\n\n  // const [listFalseAnswer, setListFalseAnswer] = useState([]) // стейт неверных ответов\n  // const [stateFalseId, setStateFalseId] = useState(2) // счетчик айдишников для стейта неверных ответов\n  /* \r\n      {\r\n      id,\r\n      name,\r\n      text\r\n  }*/ // структура записей в стейтах ответа\n\n  function setAnswers() {\n    // ответы\n    if (stateType === 'radio') {\n      // radio btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + \"answerTrue\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + \"answerFalse\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 96\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    } else if (stateType === 'text') {\n      // text btn\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + \"answerTrue\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), mapList('answerTrue')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), lastBtn('answerTrue')]\n      }, void 0, true);\n    } else if (stateType === 'checkbox') {\n      // checkbox\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: FormCSS.answer_block,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + \"answerTrue\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 95\n          }, this), mapList('answerTrue'), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.margin_bottom,\n            onClick: () => btnAddAns('answerTrue'),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: num + \"answerFalse\",\n            className: FormCSS.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 96\n          }, this), mapList('answerFalse')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), lastBtn('answerFalse')]\n      }, void 0, true);\n    }\n  }\n  function lastBtn(bool) {\n    // сокращенка для стиля последней кнопки 'завершить', \"добавить вопрос\"\n    if (last) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            onClick: () => add(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: number === 0 ? 'reset' : 'button',\n            className: FormCSS.removeAnsBtn,\n            onClick: number !== 0 ? () => remove(elemFromState.id) : undefined,\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: FormCSS.btnAdd + ' ' + FormCSS.lastBtn,\n            children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: FormCSS.lastBlock,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.btnAdd,\n          onClick: () => btnAddAns(bool),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this);\n    }\n  } // /сокращенка для стиля последней кнопки\n\n  function btnAddAns(bool) {\n    // кнопка добавления ответа\n    if (bool === 'answerTrue') {\n      setStateTrueId(stateTrueId + 1);\n      let obj = {\n        id: stateTrueId,\n        name: bool,\n        text: ''\n      };\n      setListTrueAnswer([...listTrueAnswer, obj]);\n    } else {\n      setStateFalseId(stateFalseId + 1);\n      let obj = {\n        id: stateFalseId,\n        name: bool,\n        text: ''\n      };\n      setListFalseAnswer([...listFalseAnswer, obj]);\n    }\n  } // /кнопка добавления ответа\n\n  function setTextAnsw(e, id, bool) {\n    // реактивная замена ответа в стейте\n    let listAnswer = bool === 'answerTrue' ? listTrueAnswer : listFalseAnswer;\n    let setListAnswer = bool === 'answerTrue' ? setListTrueAnswer : setListFalseAnswer;\n    let copy = [...listAnswer];\n    let index = copy.findIndex(elem => elem.id === id);\n    copy[index].text = e.target.value;\n    setListAnswer(copy);\n  } // /реактивная замена ответа в стейте\n\n  function btnRemoveAns(id, bool) {\n    // кнопка удаления ответа из стейта\n    let listAnswer = bool === 'answerTrue' ? listTrueAnswer : listFalseAnswer;\n    let setListAnswer = bool === 'answerTrue' ? setListTrueAnswer : setListFalseAnswer;\n    let copy = [...listAnswer];\n    let index = copy.findIndex(elem => elem.id === id);\n    copy.splice(index, 1);\n    setListAnswer(copy);\n  } // /кнопка удаления ответа из стейта\n\n  function mapList(bool) {\n    // сокращенка для вывода списка ответа\n    let res = (bool === 'answerTrue' ? listTrueAnswer : listFalseAnswer).map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: num + elem.name,\n          value: elem.text,\n          onChange: e => setTextAnsw(e, elem.id, bool),\n          className: FormCSS.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: FormCSS.removeAnsBtn,\n          onClick: () => btnRemoveAns(elem.id, bool),\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 20\n      }, this);\n    });\n    return res;\n  } // /сокращенка для вывода списка ответа\n\n  function setStateTypeReset(text) {\n    // радио кнопка для выбора типа ответа \n    setStateType(text);\n    setListTrueAnswer([]);\n    setListFalseAnswer([]);\n    setStateTrueId(2);\n    setStateFalseId(2);\n  } // /радио кнопка для выбора типа ответа\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: FormCSS.blockQUE,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: FormCSS.textarea,\n      name: num + \"textQUE\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: FormCSS.type,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: FormCSS.type_para,\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"radio\",\n          onClick: () => setStateTypeReset('radio'),\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 20\n        }, this), \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"text\",\n          onClick: () => setStateTypeReset('text')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 20\n        }, this), \"\\u0422\\u0435\\u043A\\u0441\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: num + \"type\",\n          value: \"checkbox\",\n          onClick: () => setStateTypeReset('checkbox')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 20\n        }, this), \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), setAnswers()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 13\n  }, this);\n}\n_c = QUEForm;\nvar _c;\n$RefreshReg$(_c, \"QUEForm\");","map":{"version":3,"names":["React","useState","FormCSS","jsxDEV","_jsxDEV","Fragment","_Fragment","QUEForm","elemFromState","number","remove","last","add","num","setAnswers","stateType","children","className","answer_block","fileName","_jsxFileName","lineNumber","columnNumber","type","name","answer","mapList","lastBtn","btnAdd","margin_bottom","onClick","btnAddAns","bool","lastBlock","removeAnsBtn","id","undefined","setStateTrueId","stateTrueId","obj","text","setListTrueAnswer","listTrueAnswer","setStateFalseId","stateFalseId","setListFalseAnswer","listFalseAnswer","setTextAnsw","e","listAnswer","setListAnswer","copy","index","findIndex","elem","target","value","btnRemoveAns","splice","res","map","onChange","setStateTypeReset","setStateType","blockQUE","textarea","placeholder","type_para","defaultChecked","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/Form/QUEForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormCSS from '../styles/Form.module.css'\r\n\r\nexport default function QUEForm({ elemFromState, number, remove, last, add }) {\r\n    /* \r\n        key={index}\r\n        id={elem}\r\n        number={index}\r\n        remove={remove}\r\n        last={index === list.length - 1 ? true : false}\r\n        add={add}\r\n    */\r\n\r\n\r\n\r\n\r\n    let num = number + '_'\r\n\r\n    // const [stateType, setStateType] = useState('radio') // стейт для смены типа ответа\r\n\r\n    // const [listTrueAnswer, setListTrueAnswer] = useState([]) // стейт верных ответов\r\n    // const [stateTrueId, setStateTrueId] = useState(2) // счетчик айдишников для стейта верных ответов\r\n\r\n    // const [listFalseAnswer, setListFalseAnswer] = useState([]) // стейт неверных ответов\r\n    // const [stateFalseId, setStateFalseId] = useState(2) // счетчик айдишников для стейта неверных ответов\r\n    /* \r\n        {\r\n        id,\r\n        name,\r\n        text\r\n    }*/ // структура записей в стейтах ответа\r\n\r\n    function setAnswers() { // ответы\r\n        if (stateType === 'radio') { // radio btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name={num + \"answerTrue\"} className={FormCSS.answer} /><br />\r\n\r\n                    <p>Неверный: </p>\r\n                    <input type=\"text\" name={num + \"answerFalse\"} className={FormCSS.answer} /><br />\r\n\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n\r\n\r\n        } else if (stateType === 'text') { // text btn\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name={num + \"answerTrue\"} className={FormCSS.answer} /><br />\r\n\r\n                    <p>Вариант написания правильного ответа: </p>\r\n\r\n                    {mapList('answerTrue')}\r\n                </div>\r\n\r\n                {lastBtn('answerTrue')}\r\n            </>)\r\n\r\n\r\n        } else if (stateType === 'checkbox') { // checkbox\r\n            return (<>\r\n                <div className={FormCSS.answer_block}>\r\n                    <p>Верный ответ: </p>\r\n                    <input type=\"text\" name={num + \"answerTrue\"} className={FormCSS.answer} /><br />\r\n\r\n                    {mapList('answerTrue')}\r\n\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.margin_bottom} onClick={() => btnAddAns('answerTrue')}>Добавить</button>\r\n\r\n                    <p>Неверный ответ: </p>\r\n                    <input type=\"text\" name={num + \"answerFalse\"} className={FormCSS.answer} /><br />\r\n\r\n                    {mapList('answerFalse')}\r\n                </div>\r\n\r\n                {lastBtn('answerFalse')}\r\n            </>)\r\n        }\r\n    }\r\n\r\n    function lastBtn(bool) { // сокращенка для стиля последней кнопки 'завершить', \"добавить вопрос\"\r\n        if (last) {\r\n            return <div className={FormCSS.lastBlock}>\r\n                <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n                <div>\r\n                    <button type=\"button\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn} onClick={() => add()}>Добавить вопрос</button>\r\n                    <button type={number === 0 ? 'reset' : 'button'} className={FormCSS.removeAnsBtn} onClick={number !== 0 ? () => remove(elemFromState.id) : undefined}>удалить вопрос</button>\r\n                    <button type=\"submit\" className={FormCSS.btnAdd + ' ' + FormCSS.lastBtn}>Завершить</button>\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className={FormCSS.lastBlock}>\r\n                <button type=\"button\" className={FormCSS.btnAdd} onClick={() => btnAddAns(bool)}>Добавить</button>\r\n            </div>\r\n        }\r\n    }// /сокращенка для стиля последней кнопки\r\n\r\n    function btnAddAns(bool) { // кнопка добавления ответа\r\n        if (bool === 'answerTrue') {\r\n            setStateTrueId(stateTrueId + 1)\r\n            let obj = {\r\n                id: stateTrueId,\r\n                name: bool,\r\n                text: ''\r\n            }\r\n            setListTrueAnswer([...listTrueAnswer, obj])\r\n        } else {\r\n            setStateFalseId(stateFalseId + 1)\r\n            let obj = {\r\n                id: stateFalseId,\r\n                name: bool,\r\n                text: ''\r\n            }\r\n            setListFalseAnswer([...listFalseAnswer, obj])\r\n        }\r\n    }// /кнопка добавления ответа\r\n\r\n    function setTextAnsw(e, id, bool) { // реактивная замена ответа в стейте\r\n        let listAnswer = (bool === 'answerTrue' ? listTrueAnswer : listFalseAnswer)\r\n        let setListAnswer = (bool === 'answerTrue' ? setListTrueAnswer : setListFalseAnswer)\r\n\r\n        let copy = [...listAnswer]\r\n        let index = copy.findIndex(elem => elem.id === id)\r\n\r\n        copy[index].text = e.target.value\r\n        setListAnswer(copy)\r\n    } // /реактивная замена ответа в стейте\r\n\r\n    function btnRemoveAns(id, bool) { // кнопка удаления ответа из стейта\r\n        let listAnswer = (bool === 'answerTrue' ? listTrueAnswer : listFalseAnswer)\r\n        let setListAnswer = (bool === 'answerTrue' ? setListTrueAnswer : setListFalseAnswer)\r\n\r\n        let copy = [...listAnswer]\r\n        let index = copy.findIndex(elem => elem.id === id)\r\n\r\n        copy.splice(index, 1)\r\n        setListAnswer(copy)\r\n    }// /кнопка удаления ответа из стейта\r\n\r\n    function mapList(bool) { // сокращенка для вывода списка ответа\r\n        let res = (bool === 'answerTrue' ? listTrueAnswer : listFalseAnswer).map((elem, index) => {\r\n            return <div key={index}>\r\n                <input type='text' name={num + elem.name} value={elem.text} onChange={(e) => setTextAnsw(e, elem.id, bool)} className={FormCSS.answer} />\r\n                <button type=\"button\" className={FormCSS.removeAnsBtn} onClick={() => btnRemoveAns(elem.id, bool)}>удалить</button>\r\n                <br />\r\n            </div>\r\n        })\r\n        return res\r\n    }// /сокращенка для вывода списка ответа\r\n\r\n    function setStateTypeReset(text) { // радио кнопка для выбора типа ответа \r\n        setStateType(text)\r\n        setListTrueAnswer([])\r\n        setListFalseAnswer([])\r\n        setStateTrueId(2)\r\n        setStateFalseId(2)\r\n    }// /радио кнопка для выбора типа ответа\r\n\r\n    return (<div className={FormCSS.blockQUE}>\r\n        <textarea className={FormCSS.textarea} name={num + \"textQUE\"} placeholder=\"Введите текст вопроса\"></textarea>\r\n\r\n        <div className={FormCSS.type}>\r\n            <p className={FormCSS.type_para}>Выберите тип ответа:</p>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='radio' onClick={() => setStateTypeReset('radio')} defaultChecked />Один вариант</label>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='text' onClick={() => setStateTypeReset('text')} />Текст</label>\r\n            <label><input type=\"radio\" name={num + \"type\"} value='checkbox' onClick={() => setStateTypeReset('checkbox')} />Выбрать несколько</label>\r\n        </div>\r\n        {setAnswers()}\r\n    </div>)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
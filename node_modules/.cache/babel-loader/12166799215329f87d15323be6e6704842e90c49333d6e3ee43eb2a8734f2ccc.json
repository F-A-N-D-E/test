{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\FormCreate\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { nanoid } from 'nanoid';\nimport FormCSS from '../styles/Form.module.css';\nimport QUEForm from \"./QUEForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  let params = useParams();\n  const [list, setList] = useState();\n  const [nameTest, setNameTest] = useState('');\n  function add() {\n    let copy = [...list];\n    copy = [...copy, {\n      id: nanoid(10),\n      type: 'radio',\n      text: '',\n      answerTrue: [[nanoid(3), '']],\n      answerFalse: [[nanoid(3), '']]\n    }];\n    setList(copy);\n    localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  }\n  function remove(id) {\n    let copy = [...list];\n    let index = copy.findIndex(elem => elem.id === id);\n    copy.splice(index, 1);\n    setList(copy);\n    localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  }\n  async function getDataFromDB() {\n    if (params.idTest) {\n      await fetch(`/create/${params.name}/${params.idTest}`).then(r => r.json()).then(r => {\n        console.log(r.data);\n        setList(r.data);\n        setNameTest(r.nameTest);\n      }).catch(err => console.log(err));\n      return false;\n    }\n    return true;\n  }\n  useEffect(() => {\n    getDataFromDB();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onKeyDown: e => {\n        if (e.key === 'Enter') e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nameTest\",\n        className: FormCSS.inp_name,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\",\n        autoComplete: \"off\",\n        value: nameTest,\n        onChange: e => {\n          setNameTest(e.target.value);\n          localStorage.setItem('dataForCreateNameTest', JSON.stringify(e.target.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), list.map((elem, index) => {\n        return /*#__PURE__*/_jsxDEV(QUEForm, {\n          elemFromState: elem,\n          number: index,\n          remove: remove,\n          last: index === list.length - 1,\n          add: add,\n          mainList: list,\n          mainSetList: setList\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Form, \"5n6gBFSTHJRD4UArUj2zewGNs2M=\", false, function () {\n  return [useParams];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useParams","nanoid","FormCSS","QUEForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","params","list","setList","nameTest","setNameTest","add","copy","id","type","text","answerTrue","answerFalse","localStorage","setItem","JSON","stringify","remove","index","findIndex","elem","splice","getDataFromDB","idTest","fetch","name","then","r","json","console","log","data","catch","err","children","method","onKeyDown","e","key","preventDefault","className","inp_name","placeholder","autoComplete","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","elemFromState","number","last","length","mainList","mainSetList","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/FormCreate/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport FormCSS from '../styles/Form.module.css'\r\nimport QUEForm from \"./QUEForm\";\r\n\r\nexport default function Form() {\r\n    let params = useParams()\r\n\r\n    const [list, setList] = useState()\r\n    const [nameTest, setNameTest] = useState('')\r\n\r\n    function add() {\r\n        let copy = [...list]\r\n\r\n        copy = [...copy,\r\n        {\r\n            id: nanoid(10),\r\n            type: 'radio',\r\n            text: '',\r\n            answerTrue: [\r\n                [nanoid(3), '']\r\n            ],\r\n            answerFalse: [\r\n                [nanoid(3), '']\r\n            ],\r\n        }\r\n        ]\r\n        setList(copy)\r\n        localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }\r\n    function remove(id) {\r\n        let copy = [...list]\r\n        let index = copy.findIndex(elem => elem.id === id)\r\n\r\n        copy.splice(index, 1)\r\n        setList(copy)\r\n        localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }\r\n\r\n\r\n\r\n    async function getDataFromDB() {\r\n        if (params.idTest) {\r\n            await fetch(`/create/${params.name}/${params.idTest}`)\r\n                .then(r => r.json())\r\n                .then(r => {\r\n                    console.log(r.data)\r\n                    setList(r.data)\r\n                    setNameTest(r.nameTest)\r\n                })\r\n                .catch(err => console.log(err))\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataFromDB()\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    return (<>\r\n        <form method=\"post\" onKeyDown={(e) => { if (e.key === 'Enter') e.preventDefault() }}>\r\n            {/* <input className={FormCSS.none} readOnly type=\"text\" name=\"id\" value={nanoid(10)} /> {/* display: none. Ставит айдишник данным для БД */}\r\n\r\n\r\n            <input type=\"text\" name=\"nameTest\" className={FormCSS.inp_name} placeholder=\"Введите название теста\" autoComplete=\"off\" value={nameTest} onChange={(e) => {\r\n                setNameTest(e.target.value)\r\n                localStorage.setItem('dataForCreateNameTest', JSON.stringify(e.target.value))\r\n            }} />\r\n\r\n            {list.map((elem, index) => {\r\n                return <QUEForm\r\n                    key={index}\r\n                    elemFromState={elem}\r\n                    number={index}\r\n                    remove={remove}\r\n                    last={index === list.length - 1}\r\n                    add={add}\r\n\r\n                    mainList={list}\r\n                    mainSetList={setList}\r\n                />\r\n            })}\r\n        </form>\r\n    </>)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\express-react-app\\\\client\\\\src\\\\FormCreate\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { nanoid } from 'nanoid';\nimport FormCSS from '../styles/Form.module.css';\nimport QUEForm from \"./QUEForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  let params = useParams();\n  const [list, setList] = useState();\n  const [extraInfo, setExtraInfo] = useState({\n    nameTest: '',\n    privat: false\n  });\n  function add() {\n    let copy = [...list];\n    copy = [...copy, {\n      id: nanoid(10),\n      type: 'radio',\n      text: '',\n      answerTrue: [[nanoid(3), '']],\n      answerFalse: [[nanoid(3), '']]\n    } // \n    ];\n    setList(copy);\n    if (!params.idTest) localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  }\n  function remove(id) {\n    let copy = [...list];\n    let index = copy.findIndex(elem => elem.id === id);\n    copy.splice(index, 1);\n    setList(copy);\n    if (!params.idTest) localStorage.setItem('dataForCreate', JSON.stringify(copy));\n  }\n  useEffect(() => {\n    if (getDataFromDB()) {\n      setList(JSON.parse(localStorage.getItem('dataForCreate')));\n      setExtraInfo(JSON.parse(localStorage.getItem('dataForCreateExtraInfo')));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onKeyDown: e => {\n        if (e.key === 'Enter') e.preventDefault();\n      },\n      children: [extraInfo.nameTest || extraInfo.nameTest === '' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nameTest\",\n        className: FormCSS.inp_name,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\",\n        autoComplete: \"off\",\n        value: extraInfo.nameTest,\n        onChange: e => {\n          let copy = {\n            ...extraInfo\n          };\n          copy.nameTest = e.target.value;\n          setExtraInfo(copy);\n          if (!params.idTest) localStorage.setItem('dataForCreateExtraInfo', JSON.stringify(extraInfo));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this) : 'qwe', list ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: list.map((elem, index) => {\n          return /*#__PURE__*/_jsxDEV(QUEForm, {\n            elemFromState: elem,\n            number: index,\n            remove: remove,\n            last: index === list.length - 1,\n            add: add,\n            mainList: list,\n            mainSetList: setList,\n            extraInfo: extraInfo,\n            setExtraInfo: setExtraInfo\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false) : \"ывлмыдлвтм\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  async function getDataFromDB() {\n    if (params.idTest) {\n      await fetch(`/create/${params.name}/${params.idTest}`).then(r => r.json()).then(r => {\n        setList(r.data);\n        setExtraInfo({\n          nameTest: r.nameTest,\n          privat: r.privat\n        });\n      }).catch(err => console.log(err));\n      return false;\n    }\n    return true;\n  }\n}\n_s(Form, \"wdbFxC+0OV1RDFun47uNAPQc9hM=\", false, function () {\n  return [useParams];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useParams","nanoid","FormCSS","QUEForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","params","list","setList","extraInfo","setExtraInfo","nameTest","privat","add","copy","id","type","text","answerTrue","answerFalse","idTest","localStorage","setItem","JSON","stringify","remove","index","findIndex","elem","splice","getDataFromDB","parse","getItem","children","method","onKeyDown","e","key","preventDefault","name","className","inp_name","placeholder","autoComplete","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","elemFromState","number","last","length","mainList","mainSetList","fetch","then","r","json","data","catch","err","console","log","_c","$RefreshReg$"],"sources":["D:/javascript/express-react-app/client/src/FormCreate/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport FormCSS from '../styles/Form.module.css'\r\nimport QUEForm from \"./QUEForm\";\r\n\r\nexport default function Form() {\r\n    let params = useParams()\r\n\r\n    const [list, setList] = useState()\r\n    const [extraInfo, setExtraInfo] = useState({\r\n        nameTest: '',\r\n        privat: false\r\n    })\r\n\r\n    function add() {\r\n        let copy = [...list]\r\n\r\n        copy = [...copy,\r\n        {\r\n            id: nanoid(10),\r\n            type: 'radio',\r\n            text: '',\r\n            answerTrue: [\r\n                [nanoid(3), '']\r\n            ],\r\n            answerFalse: [\r\n                [nanoid(3), '']\r\n            ],\r\n        } // \r\n        ]\r\n        setList(copy)\r\n        if (!params.idTest) localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }\r\n    function remove(id) {\r\n        let copy = [...list]\r\n        let index = copy.findIndex(elem => elem.id === id)\r\n\r\n        copy.splice(index, 1)\r\n        setList(copy)\r\n        if (!params.idTest) localStorage.setItem('dataForCreate', JSON.stringify(copy))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (getDataFromDB()) {\r\n            setList(JSON.parse(localStorage.getItem('dataForCreate')))\r\n            setExtraInfo(JSON.parse(localStorage.getItem('dataForCreateExtraInfo')))\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    return (<>\r\n        <form method=\"post\" onKeyDown={(e) => { if (e.key === 'Enter') e.preventDefault() }}>\r\n\r\n            {extraInfo.nameTest || extraInfo.nameTest === '' ?\r\n                <input type=\"text\" name=\"nameTest\" className={FormCSS.inp_name} placeholder=\"Введите название теста\" autoComplete=\"off\" value={extraInfo.nameTest} onChange={(e) => {\r\n                    let copy = { ...extraInfo }\r\n                    copy.nameTest = e.target.value\r\n                    setExtraInfo(copy)\r\n                    if (!params.idTest) localStorage.setItem('dataForCreateExtraInfo', JSON.stringify(extraInfo))\r\n                }} />\r\n                :\r\n                'qwe'\r\n            }\r\n\r\n            {list ? <>\r\n                {list.map((elem, index) => {\r\n                    return <QUEForm\r\n                        key={index}\r\n                        elemFromState={elem}\r\n                        number={index}\r\n                        remove={remove}\r\n                        last={index === list.length - 1}\r\n                        add={add}\r\n\r\n                        mainList={list}\r\n                        mainSetList={setList}\r\n                        extraInfo={extraInfo}\r\n                        setExtraInfo={setExtraInfo}\r\n                    />\r\n                })}\r\n            </>\r\n                :\r\n                \"ывлмыдлвтм\"\r\n            }\r\n\r\n        </form>\r\n    </>)\r\n\r\n\r\n    async function getDataFromDB() {\r\n        if (params.idTest) {\r\n            await fetch(`/create/${params.name}/${params.idTest}`)\r\n                .then(r => r.json())\r\n                .then(r => {\r\n                    setList(r.data)\r\n                    setExtraInfo({\r\n                        nameTest: r.nameTest,\r\n                        privat: r.privat\r\n                    })\r\n                })\r\n                .catch(err => console.log(err))\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,QAAQ;AAE/B,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,IAAIC,MAAM,GAAGV,SAAS,CAAC,CAAC;EAExB,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,SAASC,GAAGA,CAAA,EAAG;IACX,IAAIC,IAAI,GAAG,CAAC,GAAGP,IAAI,CAAC;IAEpBO,IAAI,GAAG,CAAC,GAAGA,IAAI,EACf;MACIC,EAAE,EAAElB,MAAM,CAAC,EAAE,CAAC;MACdmB,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,CACR,CAACrB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAClB;MACDsB,WAAW,EAAE,CACT,CAACtB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAEvB,CAAC,CAAC;IAAA,CACD;IACDW,OAAO,CAACM,IAAI,CAAC;IACb,IAAI,CAACR,MAAM,CAACc,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC,CAAC;EACnF;EACA,SAASW,MAAMA,CAACV,EAAE,EAAE;IAChB,IAAID,IAAI,GAAG,CAAC,GAAGP,IAAI,CAAC;IACpB,IAAImB,KAAK,GAAGZ,IAAI,CAACa,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACb,EAAE,KAAKA,EAAE,CAAC;IAElDD,IAAI,CAACe,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IACrBlB,OAAO,CAACM,IAAI,CAAC;IACb,IAAI,CAACR,MAAM,CAACc,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC,CAAC;EACnF;EAMAnB,SAAS,CAAC,MAAM;IACZ,IAAImC,aAAa,CAAC,CAAC,EAAE;MACjBtB,OAAO,CAACe,IAAI,CAACQ,KAAK,CAACV,YAAY,CAACW,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;MAC1DtB,YAAY,CAACa,IAAI,CAACQ,KAAK,CAACV,YAAY,CAACW,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;IAC5E;IACA;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBAAQ/B,OAAA,CAAAE,SAAA;IAAA8B,QAAA,eACJhC,OAAA;MAAMiC,MAAM,EAAC,MAAM;MAACC,SAAS,EAAGC,CAAC,IAAK;QAAE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAED,CAAC,CAACE,cAAc,CAAC,CAAC;MAAC,CAAE;MAAAL,QAAA,GAE/ExB,SAAS,CAACE,QAAQ,IAAIF,SAAS,CAACE,QAAQ,KAAK,EAAE,gBAC5CV,OAAA;QAAOe,IAAI,EAAC,MAAM;QAACuB,IAAI,EAAC,UAAU;QAACC,SAAS,EAAE1C,OAAO,CAAC2C,QAAS;QAACC,WAAW,EAAC,4HAAwB;QAACC,YAAY,EAAC,KAAK;QAACC,KAAK,EAAEnC,SAAS,CAACE,QAAS;QAACkC,QAAQ,EAAGT,CAAC,IAAK;UAChK,IAAItB,IAAI,GAAG;YAAE,GAAGL;UAAU,CAAC;UAC3BK,IAAI,CAACH,QAAQ,GAAGyB,CAAC,CAACU,MAAM,CAACF,KAAK;UAC9BlC,YAAY,CAACI,IAAI,CAAC;UAClB,IAAI,CAACR,MAAM,CAACc,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,wBAAwB,EAAEC,IAAI,CAACC,SAAS,CAACf,SAAS,CAAC,CAAC;QACjG;MAAE;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAEL,KAAK,EAGR3C,IAAI,gBAAGN,OAAA,CAAAE,SAAA;QAAA8B,QAAA,EACH1B,IAAI,CAAC4C,GAAG,CAAC,CAACvB,IAAI,EAAEF,KAAK,KAAK;UACvB,oBAAOzB,OAAA,CAACF,OAAO;YAEXqD,aAAa,EAAExB,IAAK;YACpByB,MAAM,EAAE3B,KAAM;YACdD,MAAM,EAAEA,MAAO;YACf6B,IAAI,EAAE5B,KAAK,KAAKnB,IAAI,CAACgD,MAAM,GAAG,CAAE;YAChC1C,GAAG,EAAEA,GAAI;YAET2C,QAAQ,EAAEjD,IAAK;YACfkD,WAAW,EAAEjD,OAAQ;YACrBC,SAAS,EAAEA,SAAU;YACrBC,YAAY,EAAEA;UAAa,GAVtBgB,KAAK;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWb,CAAC;QACN,CAAC;MAAC,gBACJ,CAAC,GAEC,YAAY;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGd;EAAC,gBACT,CAAC;EAGH,eAAepB,aAAaA,CAAA,EAAG;IAC3B,IAAIxB,MAAM,CAACc,MAAM,EAAE;MACf,MAAMsC,KAAK,CAAC,WAAWpD,MAAM,CAACiC,IAAI,IAAIjC,MAAM,CAACc,MAAM,EAAE,CAAC,CACjDuC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACC,CAAC,IAAI;QACPpD,OAAO,CAACoD,CAAC,CAACE,IAAI,CAAC;QACfpD,YAAY,CAAC;UACTC,QAAQ,EAAEiD,CAAC,CAACjD,QAAQ;UACpBC,MAAM,EAAEgD,CAAC,CAAChD;QACd,CAAC,CAAC;MACN,CAAC,CAAC,CACDmD,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;MACnC,OAAO,KAAK;IAChB;IACA,OAAO,IAAI;EACf;AACJ;AAAC3D,EAAA,CAvGuBD,IAAI;EAAA,QACXR,SAAS;AAAA;AAAAuE,EAAA,GADF/D,IAAI;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
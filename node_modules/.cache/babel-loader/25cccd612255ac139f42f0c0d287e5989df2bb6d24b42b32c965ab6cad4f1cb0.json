{"ast":null,"code":"import { nanoid } from 'nanoid';\nexport function resetLocalStorage() {\n  localStorage.setItem('dataForCreate', JSON.stringify([{\n    id: nanoid(10),\n    type: 'radio',\n    text: '',\n    answerTrue: [[nanoid(3), '']],\n    answerFalse: [[nanoid(3), '']]\n  }]));\n  localStorage.setItem('dataForCreateExtraInfo', JSON.stringify({\n    nameTest: '',\n    privat: false\n  }));\n}\nexport function setDefultLocalStorage(key) {\n  if (key === 'dataForCreate') {\n    localStorage.setItem('dataForCreate', JSON.stringify([{\n      id: nanoid(10),\n      type: 'radio',\n      text: '',\n      answerTrue: [[nanoid(3), '']],\n      answerFalse: [[nanoid(3), '']]\n    }]));\n  } else if (key === 'dataForCreateExtraInfo') {\n    localStorage.setItem('dataForCreateExtraInfo', JSON.stringify({\n      nameTest: '',\n      privat: false\n    }));\n  }\n}\nexport function setRandomSort(arr) {\n  let tempArr = [];\n  do {\n    let randomNum = Math.floor(Math.random() * arr.length);\n    tempArr.push(arr[randomNum]);\n    arr.splice(randomNum, 1);\n  } while (arr.length);\n  return tempArr;\n}","map":{"version":3,"names":["nanoid","resetLocalStorage","localStorage","setItem","JSON","stringify","id","type","text","answerTrue","answerFalse","nameTest","privat","setDefultLocalStorage","key","setRandomSort","arr","tempArr","randomNum","Math","floor","random","length","push","splice"],"sources":["D:/javascript/express-react-app/client/src/layouts/additionaleFunc.js"],"sourcesContent":["import { nanoid } from 'nanoid'\r\n\r\nexport function resetLocalStorage () {\r\n  localStorage.setItem('dataForCreate', \r\n    JSON.stringify([{\r\n      id: nanoid(10),\r\n      type: 'radio',\r\n      text: '',\r\n      answerTrue: [\r\n          [nanoid(3), '']\r\n      ],\r\n      answerFalse: [\r\n          [nanoid(3), '']\r\n      ],\r\n  }]))\r\n  localStorage.setItem('dataForCreateExtraInfo', JSON.stringify({\r\n    nameTest: '',\r\n    privat: false\r\n  }))\r\n}\r\n\r\nexport function setDefultLocalStorage (key) {\r\n  if (key === 'dataForCreate'){\r\n    localStorage.setItem('dataForCreate', \r\n      JSON.stringify([{\r\n        id: nanoid(10),\r\n        type: 'radio',\r\n        text: '',\r\n        answerTrue: [\r\n            [nanoid(3), '']\r\n        ],\r\n        answerFalse: [\r\n            [nanoid(3), '']\r\n        ],\r\n    }]))\r\n  } else if (key === 'dataForCreateExtraInfo'){\r\n    localStorage.setItem('dataForCreateExtraInfo', JSON.stringify({\r\n      nameTest: '',\r\n      privat: false\r\n    }))\r\n  }\r\n}\r\n\r\n\r\nexport function setRandomSort (arr) {\r\n  let tempArr = []\r\n  \r\n  do{\r\n    let randomNum = Math.floor(Math.random() * arr.length)\r\n    \r\n    tempArr.push(arr[randomNum])\r\n    arr.splice(randomNum, 1)\r\n  } while (arr.length)\r\n  \r\n  return tempArr  \r\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,OAAO,SAASC,iBAAiBA,CAAA,EAAI;EACnCC,YAAY,CAACC,OAAO,CAAC,eAAe,EAClCC,IAAI,CAACC,SAAS,CAAC,CAAC;IACdC,EAAE,EAAEN,MAAM,CAAC,EAAE,CAAC;IACdO,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,CACR,CAACT,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAClB;IACDU,WAAW,EAAE,CACT,CAACV,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAEvB,CAAC,CAAC,CAAC,CAAC;EACJE,YAAY,CAACC,OAAO,CAAC,wBAAwB,EAAEC,IAAI,CAACC,SAAS,CAAC;IAC5DM,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;AACL;AAEA,OAAO,SAASC,qBAAqBA,CAAEC,GAAG,EAAE;EAC1C,IAAIA,GAAG,KAAK,eAAe,EAAC;IAC1BZ,YAAY,CAACC,OAAO,CAAC,eAAe,EAClCC,IAAI,CAACC,SAAS,CAAC,CAAC;MACdC,EAAE,EAAEN,MAAM,CAAC,EAAE,CAAC;MACdO,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,CACR,CAACT,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAClB;MACDU,WAAW,EAAE,CACT,CAACV,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAEvB,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,MAAM,IAAIc,GAAG,KAAK,wBAAwB,EAAC;IAC1CZ,YAAY,CAACC,OAAO,CAAC,wBAAwB,EAAEC,IAAI,CAACC,SAAS,CAAC;MAC5DM,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC,CAAC,CAAC;EACL;AACF;AAGA,OAAO,SAASG,aAAaA,CAAEC,GAAG,EAAE;EAClC,IAAIC,OAAO,GAAG,EAAE;EAEhB,GAAE;IACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,GAAG,CAACM,MAAM,CAAC;IAEtDL,OAAO,CAACM,IAAI,CAACP,GAAG,CAACE,SAAS,CAAC,CAAC;IAC5BF,GAAG,CAACQ,MAAM,CAACN,SAAS,EAAE,CAAC,CAAC;EAC1B,CAAC,QAAQF,GAAG,CAACM,MAAM;EAEnB,OAAOL,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}